{
  "swagger" : "2.0",
  "info" : {
    "description" : "The bizpay API is based on REST. It has resource-oriented URLs, and uses HTTP response codes to indicate API errors. We use built-in HTTP features, like HTTP authentication and HTTP verbs, which are understood by off-the-shelf HTTP clients. JSON is consumed and returned by all API endpoints. \n\n The API is broken into 5 parts:\n \n - `/customers`: Where customers (buyers) are added.\n - `/plans`: Where payment schedules and options are specified.\n - `/quotes`: Where products and prices are combined with payment schedules.\n - `/agreements`: Where schedules of commitments to pay, attached to products are created.\n - `/charges`: Where payment methods are organised and managed.\n \n Sellers can use the bizpay API to make payment plans and coordiate complex schedules of customer payments. \n \n# Authentication\n Our API offers authentication using:\n  ```\n  - API Key in header (x-bizpay-key)\n  ```\n\n  To connect to our API, please contact us via enquiries@bizpay.co.uk to receive your  API key. All the endpoints in this document require you to pass the API key in the request header.\n  \n  In addition to the API key the bizpay system uses `actor_id`'s to identify the users. Sellers are able to create multiple actor_id's and use them to keep track of API usage. Control over `actor_id`'s is available via the bizpay admin console. \n  \n  Any URL submitted to the API should begin with https:// as we do not support http://.\n\n# Dates & Times\nAll date and time data is expressed as calendar dates (year, month, day) and a 24-hour day. Day and time data is always expressed in a combined format. No truncated formats are allowed. Dates are based on the Gregorian calendar. All date and time data is expressed numerically, leading zeros are preserved.\n\nThe basic type DateTime string patterns are 'yyyy-MM-ddTHH:mm:ssZ' (for UTC) or 'yyyy-MM-ddTHH:mm:ss�hh:mm' (for a local time offset). The character 'T' is a required delimiter between the date and time sections. Times are expressed in the extended format, the ':' is used as a delimiter between hours, minutes and seconds.\n\n<a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"blank\">You can read a full explanation of the ISO 8601 date/time spec here.</a>\n# Countries and Languages\nCountries in the bizpay system are specified using the 3 letter country code following the ISO 3166-1 specification. <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1\" target=\"blank\">\n\nSee list of ISO 3166-1 language codes.</a>\n\nLanguages are specified with the 3 letter language code following the ISO 639-2/B specification. <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\" target=\"blank\">\n\nSee list of ISO 639-2/B languages.</a>'\n\n\n # Currency values\n\nAmounts which represent currencies in the bizpay system are always stored as integers without decimals. This means that when they are displayed, decimal places need to be added. The currency codes used by the system conform to the ISO 4217 standard. <br>\n\nAs an example, for USD which has two decimal places, if you needed to represent $100 you would need to input the price as 10000 and select the currency USD. The system would then unerstand this was a representation of $100.00.\n\n<br><strong> Currencies always need to be input with no decimals as they are always stored as integers.</strong> \n\n<a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"blank\">You can see the full list of the ISO 4217 currency codes here.</a>\n# Percentage values\nPercentages within the bizpay system always influence prices so are stored similarly to currency as integers. When you encounter percentages within the plan object for example, these need to be entered as integers and the system will add two decimal places to your values. \n\nFor example, 116 will be recognised as 1.16 %. \n\n<strong>Percentages always need to be input with no decimals as they are always stored as integers.</strong> \n# Prices\nWhen prices are specified - for example in `plans` and also in products within `quotes` and `agreements` - the prices are specified in 3 elements.<br>\n- `pre_tax_price`: This is the price of the item before any tax is applied.\n- `tax_price`: This is the price of any taxes which are being applied.\n- `total_price`: This is system calculated and represents the `pre_tax_price` and `tax_price` added togehter.\n\n<strong>Prices are always specified in currency and are stored as integers not decimals.</strong>\n# Refunds and cancellation\n\n<br>There is some automation which applies to refunds and cancelation events which apply to `agreements` within the system. \n\nRefunds and cancellation when triggered can have 3 types of behaviour:\n- `refund_products`: This refunds specified values specific to the product automatically based on the payment method used for each charge.\n- `refund_all`: This gives a full refund of all charges.\n- `non_refundable`: Gives no refund at all. \n\n<br>Relating specifically to `refund_products`, each time a product is added within a quote or agreement, it's posisble to specify the following fields:\n\n- `pre_tax_refund`\n- `tax_refund`\n\n<br>These represent amounts which will be refunded against both the `pre_tax_price` and `tax_price` respectively.\n\n<br><strong>Refund / Cancelation example</strong><br>\n\nAs an example if an agreement with one product had the below values, and either refund or cancellation were configured with `refund_products`, the below amounts would be refunded when a cancelation or refund requst was sent.\n\n<br><strong>Agreement product values:</strong>\n`pre_tax_price` = 100, `tax_price` = 20.\n`pre_tax_refund` = 25, `tax_refund` = 5.\n\n<br><strong>Outcome in the event of refund or cancel being triggered:</strong>\n\nA refund of 30 was made to the buyer.\nThe new `pre_tax_price` = 75\nThe new`tax_price` = 15.\n\n<br>This shows that the amounts specified in the `pre_tax_refund` and `tax_refund` fields are the actual amounts of currency which should be refunded against each respective value if refund_products was selected. \n# Status Codes \n \nThe bizpay API uses the following status codes to represent system outcomes.  \n\n  `200`:  The request has succeeded. \n  \n  `201`:  The request has been fulfilled and resulted in a new resource being created.\n\n  `400`: Bad Request - The request could not be understood by the server due to malformed syntax.  \n \n  `401`: The request requires user authentication or, if the request included authorization credentials, authorization has been refused for those credentials.  \n  \n  `403`: Forbidden - The server understood the request, but is refusing to fulfill it.  \n \n  `404`: Not Found - The requested resource could not be found.\n \n  `405`: Method not allowed. \n  \n  `422`: Unprocessable entity - Validation error  \n  \n  `429`:  Too Many Requests \n  \n  `500`: Internal Server Error. \n  \n  `503`: Service Unavailable - The server is currently unable to handle the request due to a temporary condition which will be alleviated after some delay. You can choose to resend the request again.  \n  \n\n",
    "version" : "1.25",
    "title" : "Bizpay API Documentaion",
    "termsOfService" : "https://www.bizpay.co.uk/terms/",
    "contact" : {
      "email" : "enquiries@bizpay.co.uk"
    },
    "x-logo" : {
      "url" : "/BP.png",
      "description" : "Endpoints and parameters for connecting to Bizpay API"
    }
  },
  "host" : "api.bizpay.co.uk",
  "basePath" : "/v1.25/",
  "tags" : [ {
    "name" : "Customers",
    "description" : "With the customers endpoint it is possible to create new customers within the bizpay system. As customers are the payers of charges within the bizpay system it is not possible to issue a charge without first defining who will be paying it. <br><br>It is necessary to create customers to store the following system objects as they must be linked to a customer record. \n  \n  - Agreement (a schedule of payments which a customer comits to pay)\n  - Charge/source (a payment method which a customer provides to pay\n  - Charge (a way to charge a customer a specific amount)           \n",
    "x-displayName" : "Customers"
  }, {
    "name" : "Plans",
    "description" : "Plans control pricing for quotes and agreements. With plan you are able to specify the time period which will be used (quarterly, monthly, weekly, etc) how many payment options should be shown, and the change in price for each time period option. As plan drives the pricing for quotes and agreements, it's necessary to define the values in a plan before creating either of these as the plan helps to calculate which pricing options are offered. <br><br>A number of plans are included in your account. You can explore these in the API browser interface area of your account to understand the different options and how they affect pricing. admin.bizpay.co.uk/login. Some examples of plans which can be created.         \n- A plan which has a pay immediately option, with no increase in price, but also offers an increase of the initial price by 5% if paid over 1 month, 10% if paid over 6 months and 15% if paid over 12 months, to be collected evenly on a monthly basis. You can set the additional charges to be either collected in the first payment or split evenly over the periods.\n- A structure where an initially specified price is split over up to six months, charging an additional �10 for each month. Paid over 1 month = �10 extra, paid over 2 months, �20 extra, 3 months = �30, etc. Again the option to specify whether the extra fee is collected up front or paid throughout the selected term.\n- A payment structure where it costs no extra if paid immediately, 5% extra to pay in 30 days and 15% extra to pay 60 days. All paid at the end of the selected term. \n\nPlan is flexible and allows for the creation of a wide range of instalment and invoicing type payment structures where different amounts are charged depending on the term which is selected.    \n",
    "x-displayName" : "Plans"
  }, {
    "name" : "Quotes",
    "description" : "Quotes allow sellers to generate pricing for a set of given products and get the prices back for a specific plan. The quotes system gives a way to generate instalment pricing where basket values are dynamic and rapidly changing.\n",
    "x-displayName" : "Quotes"
  }, {
    "name" : "Agreements",
    "description" : "Agreements are essentially an agreement by a customer to pay for a range of products, over a schedule of payments. <br><br>The timing of the payments in the agreement is controlled by the plan you specify. Although it is possible to directly create agreements, pricing must always be determined from a plan. <br><br>The recommended way to use the bizpay API is to: <br><br> a. Create a plan, <br> b. Create a quote, <br> c. Convert the quote into an agreement. <br>\n",
    "x-displayName" : "Agreements"
  }, {
    "name" : "Charges",
    "description" : "The charge endpoint manages all the aspects of charging amounts to customers.\n",
    "x-displayName" : "Charges"
  }, {
    "name" : "Gateways",
    "description" : "Gateways are configured via our admin console - you should login there to edit their details.\n",
    "x-displayName" : "Gateways"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/customers" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "List all customers",
        "description" : "Sending a GET request the the `/customers` endpoint returns a paginated list of all customers.",
        "operationId" : "getCustomers",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of items to return in the request - maximum 200.",
          "required" : false,
          "type" : "integer",
          "default" : 50,
          "maximum" : 200,
          "minimum" : 1
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The starting page for the query.",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "minimum" : 1
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetCustomers"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found - The requested resource could not be found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Customers" ],
        "summary" : "Create a customer",
        "description" : "Sending a POST request to the `/customer` endpoint, creates a new customer with the specified values in the bizpay system. This enables you to create payment sources, quotes and agreements which link to the customer. It is important to save the `id` which is created to refernce this customer later.",
        "operationId" : "postCustomer",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "New customer's data",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AgreementCustomer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Customer successfully created.",
            "schema" : {
              "$ref" : "#/definitions/id_response_200"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "422" : {
            "description" : "Unprocessable entity - Validation error.",
            "examples" : {
              "application/json" : {
                "email" : "The email must be a valid email address."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/CustomerErrors"
            }
          }
        }
      }
    },
    "/customers/{id}" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "Get information about specific customer",
        "description" : "Sending a GET request to the `/customers/{id}` endpoint retrieves all data stored about a specific customer. A valid `id` needs to be specified in the path of the request.",
        "operationId" : "getCustomer",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The `id` of the customer. This needs to be placed in the URL path.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/Customer"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found - The requested resource could not be found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Customers" ],
        "summary" : "Update information about a specific customer",
        "description" : "Sending a PUT request to `/customers/{id}` allows you to update a customer's information. You need to specify a valid `id` in the path of the request. With PUT requests no fields are required and only fields which need to be updated should be sent.",
        "operationId" : "updateCustomer",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the customer which will be updated. This needs to be placed in the URL path.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Customer data to update",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PutCustomer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful update",
            "schema" : {
              "$ref" : "#/definitions/Customer"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found - The requested resource could not be found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "422" : {
            "description" : "Unprocessable entity - Validation error.",
            "examples" : {
              "application/json" : {
                "email" : "The email must be a valid email address."
              }
            },
            "schema" : {
              "$ref" : "#/definitions/CustomerErrors"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Customers" ],
        "summary" : "Delete a specific customer",
        "description" : "This request allows you to delete a customer from the system by passing a valid `id` for the customer in the path of the request.",
        "operationId" : "deleteCustomer",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the customer which will be deleted. This needs to be placed in the URL path.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Customer successfully deleted",
            "schema" : {
              "$ref" : "#/definitions/ok_response_200"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found - The requested resource could not be found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/plans" : {
      "get" : {
        "tags" : [ "Plans" ],
        "summary" : "List all plans",
        "description" : "Sending a GET request to the `/plans` endpoint returns a list of all plans.",
        "operationId" : "getPlans",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetPlans"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found - The requested resource could not be found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Plans" ],
        "summary" : "Create a plan",
        "description" : "Sending a POST request to the `/plans` endpoint creates a new plan.",
        "operationId" : "createPlan",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Plan data",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PostPlan"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "examples" : {
              "application/json" : {
                "id" : "shsj9101bkabAjlsn91Ab"
              }
            },
            "schema" : {
              "$ref" : "#/definitions/id_response_200"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found - The requested resource could not be found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/plans/{id}" : {
      "get" : {
        "tags" : [ "Plans" ],
        "summary" : "List details of a single plan",
        "description" : "Sending a GET request with a plan `id' lists the details of the specified plan.",
        "operationId" : "getPlan",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The `id` of the plan you would like to retrieve.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetPlan"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found - The requested resource could not be found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Plans" ],
        "summary" : "Update information about the plan",
        "description" : "You can update information about a specific plan by sending a PUT request to the `/plans` endpoint and adding a valid plan `id` in the path. With PUT requests no fields are required and only fields which need to be updated should be sent.",
        "operationId" : "updatePlan",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The `id` of the plan you would like to update.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "invalidate_quotes",
          "in" : "query",
          "description" : "This option allows you to ensure that any quotes which have been created based on this plan will be invalidated.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Plan data",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PutPlan"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetPlan"
            }
          },
          "400" : {
            "description" : "Invalid operation",
            "examples" : {
              "application/json" : {
                "error" : "invalid request"
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Plans" ],
        "summary" : "Delete a plan",
        "description" : "You can delete a plan by sending a delete request to the `/plans` endpoint and adding a valid plan `id` in the path.",
        "operationId" : "deletePlan",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the plan you would like to delete.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Plan successfully deleted",
            "schema" : {
              "$ref" : "#/definitions/ok_response_200"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found - The requested resource could not be found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/quotes" : {
      "get" : {
        "tags" : [ "Quotes" ],
        "summary" : "Get all quotes",
        "description" : "Get all quotes",
        "operationId" : "getQuotes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of items to return in the request - maximum 200.",
          "required" : false,
          "type" : "integer",
          "default" : 50,
          "maximum" : 200,
          "minimum" : 1
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The starting page for the query.",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "minimum" : 1
        }, {
          "name" : "customer_id",
          "in" : "query",
          "description" : "Adding a valid `customer_id` allows you to view quotes by customer.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "plan_id",
          "in" : "query",
          "description" : "Adding a valid `plan_id` allows you to show only quotes created from the plan you specify.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "Specifying `from` as a valid date in the format of yyyy-mm-ddTHH:MM:SS allows you to set the earliest quote creation date you would like to see in the results. <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"blank\">Full explanation of the format here</a>.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "Specifying `to` as a valid date in the format of yyyy-mm-ddTHH:MM:SS allows you to set the last quote creation date you would like to see in the results.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all quotes",
            "schema" : {
              "$ref" : "#/definitions/GetQuotes"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found - The requested resource could not be found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Quotes" ],
        "summary" : "Create a quote",
        "description" : "The POST quote endpoint allows you to retrieve the pricing options, based on a `plan_id` for a selection of products. It returns a quote which contains all the pricing options which are available under the plan you have chosen to apply.",
        "operationId" : "createQuote",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "link",
          "in" : "query",
          "description" : "Optional field which allows you to generate a https:// link which you can use to preview a quote.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PostQuote"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Quote created successfully",
            "schema" : {
              "$ref" : "#/definitions/Quote"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/quotes/{id}" : {
      "get" : {
        "tags" : [ "Quotes" ],
        "summary" : "Get details of a quote",
        "description" : "Sending a GET request to the `/quotes` endpoint allows you to retrieve the details of a specific quote. A valid `id` is required in the path.",
        "operationId" : "getQuote",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The `id` of the quote you would like to update.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Quote details",
            "schema" : {
              "$ref" : "#/definitions/Quote"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found - The requested resource could not be found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Quotes" ],
        "summary" : "Update a quote",
        "description" : "Sending a PUT request to the `/quote` endpoint allows you to update the details of a quote which you have created. With PUT requests no fields are required and only fields which need to be updated should be sent.",
        "operationId" : "updateQuote",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The `id` of the quote you would like to update.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "link",
          "in" : "query",
          "description" : "Optional field which allows you to generate a https:// link which you can use to preview a quote.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PutQuote"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Quote updated successfully",
            "schema" : {
              "$ref" : "#/definitions/Quote"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found - The requested resource could not be found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Quotes" ],
        "summary" : "Delete a quote",
        "description" : "The DELETE quote endpoint allows you to delete a quote you have created.",
        "operationId" : "deleteQuote",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The `id` of the quote you would like to update.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Quote deleted successfully",
            "schema" : {
              "$ref" : "#/definitions/ok_response_200"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found - The requested resource could not be found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/agreements" : {
      "get" : {
        "tags" : [ "Agreements" ],
        "summary" : "Returns all agreements",
        "description" : "Sending a GET request to the `/agreements/` endpoint returns all the agreements linked to the seller account. The response can be filtered based on a range of criteria.",
        "operationId" : "getAgreements",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of items to return in the request - maximum 200.",
          "required" : false,
          "type" : "integer",
          "default" : 50,
          "maximum" : 200,
          "minimum" : 1
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The starting page for the query.",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "minimum" : 1
        }, {
          "name" : "customer_id",
          "in" : "query",
          "description" : "Adding a valid `customer_id` allows you to view quotes by customer.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "Specifying `from` as a valid date in the format of yyyy-mm-ddTHH:MM:SS allows you to set the earliest creation date you would like to see in the results. <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"blank\">Full explanation of the format here</a>.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "Specifying `to` as a valid date in the format of yyyy-mm-ddTHH:MM:SS allows you to set the last creation date you would like to see in the results.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "The current status of the agreement. Options are ok, `paid`, `cancelled`, `refunded`, `overdue` and `void`. `ok` means the agreement is currently live and the required payments have been made so far. `paid` means the agreement has been fully paid, `cancelled` means the agreement has been cancelled, `refunded` means the agreement has been refunded. `overdue` means there are payments which were due but went unpaid and `void` means the agreement was voided.",
          "required" : false,
          "type" : "string",
          "enum" : [ "ok", "paid", "cancelled", "refunded", "overdue", "void" ]
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of agreements",
            "schema" : {
              "$ref" : "#/definitions/GetAgreements"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found - The requested resource could not be found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Agreements" ],
        "summary" : "Creates an agreement",
        "description" : "Sending a POST request to the `/agreements` endpoint, creates an agreement from scratch based on the supplied values. We recommend first creating a customer, then a quote, then an agreement from the quote. This endpoint, will do these steps for you in one operation, however latency is significantly improved if you seperte the steps and this is the recommended way to use the bizpay API.",
        "operationId" : "postAgreement",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "link",
          "in" : "query",
          "description" : "Optional field which allows you to generate a https:// link which you can use to view an agreement.",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PostAgreement"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Agreement successfully created",
            "schema" : {
              "$ref" : "#/definitions/id_response_200"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found - The requested resource could not be found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/agreements/{agreement_id}" : {
      "get" : {
        "tags" : [ "Agreements" ],
        "summary" : "Get details of an agreement",
        "description" : "Sending a get request to the `/agreements` endpoint and specifying a valid `agreement_id` returns all the details of that specific agreement.",
        "operationId" : "getAgreement",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "agreement_id",
          "in" : "path",
          "description" : "The id of the agreement you would like to request the details for.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Agreement details",
            "schema" : {
              "$ref" : "#/definitions/GetAgreement"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found - The requested resource could not be found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "422" : {
            "description" : "Unprocessable entity - Validation error.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/agreements/{agreement_id}/cancel" : {
      "put" : {
        "tags" : [ "Agreements" ],
        "summary" : "Cancel an agreement",
        "description" : "Sending a PUT request to the `/agreements/{agreement_id}/cancel` endpoint and specifying a valid `agreement_id` in the path allows you to cancel an agreement.",
        "operationId" : "cancelAgreement",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "agreement_id",
          "in" : "path",
          "description" : "The `agreement_id` of the agreement you would like to cancel.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/GetAgreement"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "422" : {
            "description" : "Unprocessable entity - Validation error.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/agreements/{agreement_id}/refund" : {
      "put" : {
        "tags" : [ "Agreements" ],
        "summary" : "Refund an agreement",
        "description" : "Sending a PUT request to the `/agreements/{agreement_id}/refund` endpoint and specifying a valid `agreement_id` in the path allows you to refund an agreement.",
        "operationId" : "refundAgreement",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "agreement_id",
          "in" : "path",
          "description" : "The `agreement_id` of the agreement you would like to refund.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/GetAgreement"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "422" : {
            "description" : "Unprocessable entity - Validation error.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/agreements/{agreement_id}/charges" : {
      "put" : {
        "tags" : [ "Agreements" ],
        "summary" : "Change the payment method for agreement charges.",
        "description" : "Sending a PUT request to the `/agreements/{agreement_id}/charges` endpoint and specifying a valid `charge_id` or group of ID's, together with a payment method, will change the payment method of the specified charge ID's.",
        "operationId" : "changeAgreementMethod",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "agreement_id",
          "in" : "path",
          "description" : "The id of the agreement you would like to change the charge method for.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "charges",
          "description" : "An array of the `charge_id`(s) and `method_id`(s) you would like to assign.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChangeMethod"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Agreement details",
            "schema" : {
              "$ref" : "#/definitions/ok_response_200"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found - The requested resource could not be found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "422" : {
            "description" : "Unprocessable entity - Validation error.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/agreements/{agreement_id}/charges/now" : {
      "put" : {
        "tags" : [ "Agreements" ],
        "summary" : "Charge amounts from an agreement manually now.",
        "description" : "Sending a PUT request to the `/agreements/{agreement_id}/charges/now` endpoint and specifying a valid `charge_id` or group of ID's will charge those ID's now.<br><br>This endpoint will fail if the agreement has been cancelled or refunded.",
        "operationId" : "chargeAgreement",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "agreement_id",
          "in" : "path",
          "description" : "The id of the agreement you would like to charge now.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "charges",
          "description" : "An array of the `charge_id`(s) you would like to charge now.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChargeNow"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Agreement details",
            "schema" : {
              "$ref" : "#/definitions/ok_response_200"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found - The requested resource could not be found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "422" : {
            "description" : "Unprocessable entity - Validation error.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/agreements/quote/{quote_id}" : {
      "post" : {
        "tags" : [ "Agreements" ],
        "summary" : "Creates an agreement from a quote",
        "description" : "Sending a POST request to the `/agreements/quote/` endpoint and specifying a valid `quote_id` generates an agreement from the quote.",
        "operationId" : "postAgreementFromQuote",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "quote_id",
          "in" : "path",
          "description" : "The id of the quote you would like to convert into an agreement.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AgreementFromQuote"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Agreement successfully created",
            "schema" : {
              "$ref" : "#/definitions/id_response_200"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found - The requested resource could not be found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/charges" : {
      "get" : {
        "tags" : [ "Charges" ],
        "summary" : "View all charges",
        "description" : "Sending a GET request to the `/charges` endpoint allows you to receive a list of all the charges which are linked to your account. You can filter the list in a number of ways defined below.",
        "operationId" : "getCharges",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of items to return in the request - maximum 200.",
          "required" : false,
          "type" : "integer",
          "default" : 50,
          "maximum" : 200,
          "minimum" : 1
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The starting page for the query.",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "minimum" : 1
        }, {
          "name" : "customer_id",
          "in" : "query",
          "description" : "Adding a valid `customer_id` allows you to view charges by customer.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "Specifying `from` as a valid date in the format of `yyyy-mm-ddTHH:MM:SS` allows you to set the earliest date you would like to see in the results. By default this value is today. <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"blank\">Full explanation of the format here</a>.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to",
          "in" : "query",
          "description" : "Specifying `to` as a valid date in the format of `yyyy-mm-ddTHH:MM:SS` allows you to set the last date you would like to see in the results. By default this value is 12 months from today.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "The status of the charge. Can be `pending`, `paid`, `failed` or `void`. `pending` means the payment has not yet been processed, `paid` means the amount was taken successfully, `failed` means payment was attempted but failed to be taken and `void` means the charge was voided.",
          "required" : false,
          "type" : "string",
          "enum" : [ "pending", "paid", "failed", "void" ]
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all charges",
            "schema" : {
              "$ref" : "#/definitions/GetCharges"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found - The requested resource could not be found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Charges" ],
        "summary" : "Change the payment method for charges",
        "description" : "Sending a PUT request to the `/charges` endpoint and specifying a valid `charge_id` or group of ID's together with a valid payment `method_id` will change the payment method for the specified charges.",
        "operationId" : "changeMethod",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "charges",
          "description" : "An array of the `charge_id`(s) and `method_id`(s) you would like to assign.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChangeMethod"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Charge details",
            "schema" : {
              "$ref" : "#/definitions/ok_response_200"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found - The requested resource could not be found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "422" : {
            "description" : "Unprocessable entity - Validation error.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/charges/{customer_id}" : {
      "post" : {
        "tags" : [ "Charges" ],
        "summary" : "Create a new charge",
        "description" : "Sending a POST request to the `/charges` endpoint and specifying a valid `customer_id` in the path allows you to create a new charge.",
        "operationId" : "postCharge",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customer_id",
          "in" : "path",
          "description" : "The `customer_id` of the customer you would like to charge.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostCharges"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/id_response_200"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/charges/now/" : {
      "put" : {
        "tags" : [ "Charges" ],
        "summary" : "Charge amounts manually now",
        "description" : "Sending a PUT request to the `/charges/now` endpoint and specifying a valid `charge_id` or group of ID's will charge those ID's now.",
        "operationId" : "chargeNow",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "charges",
          "description" : "An array of the `charge_id`(s) you would like to charge now.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChargeNow"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Charge details",
            "schema" : {
              "$ref" : "#/definitions/ok_response_200"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "404" : {
            "description" : "Not Found - The requested resource could not be found.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "422" : {
            "description" : "Unprocessable entity - Validation error.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/charges/void/{charge_id}" : {
      "put" : {
        "tags" : [ "Charges" ],
        "summary" : "Void a charge",
        "description" : "Sending a PUT request to the `/charges/void/` endpoint and specifying a valid `charge_id` in the path allows you to void a charge.",
        "operationId" : "voidCharge",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "charge_id",
          "in" : "path",
          "description" : "The `charge_id` of the charge you would like to void.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ok_response_200"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "422" : {
            "description" : "Unprocessable entity - Validation error.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/charges/refund/{charge_id}" : {
      "put" : {
        "tags" : [ "Charges" ],
        "summary" : "Refund a charge",
        "description" : "Sending a PUT request to the `/charges/refund/` endpoint and specifying a valid `charge_id` in the path allows you to refund a charge.",
        "operationId" : "refundCharge",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "charge_id",
          "in" : "path",
          "description" : "The `charge_id` of the charge you would like to refund.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "amount",
          "in" : "query",
          "description" : "The amount you would like to refund against this charge as an integer. For example: �1.55 should be represented as 155.",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ok_response_200"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          },
          "422" : {
            "description" : "Unprocessable entity - Validation error.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/charges/methods/" : {
      "get" : {
        "tags" : [ "Charges" ],
        "summary" : "Get a list of all charging methods for a customer",
        "description" : "Sending a GET request to the `/charges/methods/` endpoint and specifying a valid `customer_id` in the path allows you to retrieve all the saved payment methods for this customer.",
        "operationId" : "getChargeMethods",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customer_id",
          "in" : "query",
          "description" : "The `customer_id` of the customer you would like to get the payment methods for.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/getChargeMethods_response_200"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Charges" ],
        "summary" : "Create a new charging method",
        "description" : "Sending a POST request to the `/charges/methods/` endpoint and specifying a valid `customer_id` in the path allows you to save a new payment method for this customer.",
        "operationId" : "postChargeMethod",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "customer_id",
          "in" : "query",
          "description" : "The `customer_id` of the customer you would like to add the payment method for.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PostChargeMethod"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/id_response_200"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/charges/methods/{method_id}" : {
      "put" : {
        "tags" : [ "Charges" ],
        "summary" : "Update details for a charging method",
        "description" : "Sending a PUT request to the `/charges/methods/` endpoint and specifying a valid `method_id` in the path allows you to update some of the details for a payment method.",
        "operationId" : "updateChargeMethod",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "method_id",
          "in" : "path",
          "description" : "The `method_id` of the payment method you would like to remove.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PutChargeMethod"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ok_response_200"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Charges" ],
        "summary" : "Delete a charging method",
        "description" : "Sending a DELETE request to the `/charges/methods/` endpoint and specifying a valid `method_id` in the path allows you to remove a payment method.",
        "operationId" : "deleteChargeMethod",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "method_id",
          "in" : "path",
          "description" : "The `method_id` of the payment method you would like to remove.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "actor_id",
          "in" : "query",
          "description" : "A valid `actor_id`.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful response",
            "schema" : {
              "$ref" : "#/definitions/ok_response_200"
            }
          },
          "403" : {
            "description" : "Forbidden - The server understood the request, but is refusing to fulfill it.",
            "schema" : {
              "$ref" : "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "api_key" : {
      "description" : "Please provide a valid api key and pass it as a header parameter `x-bizpay-key` for authorisation.\n",
      "type" : "apiKey",
      "name" : "x-bizpay-key",
      "in" : "header"
    }
  },
  "definitions" : {
    "Customer" : {
      "required" : [ "first_name", "last_name" ],
      "properties" : {
        "customer_id" : {
          "type" : "string",
          "example" : "3329861723HAoq0qV",
          "description" : "The automatically assigned `ID` representing the customer.",
          "readOnly" : true,
          "minLength" : 32,
          "maxLength" : 64
        },
        "first_name" : {
          "type" : "string",
          "description" : "The customer's first name.",
          "minLength" : 1,
          "maxLength" : 128
        },
        "middle_names" : {
          "type" : "string",
          "example" : "Kailee",
          "description" : "Any middle name(s) which the customer has."
        },
        "last_name" : {
          "type" : "string",
          "example" : "Jones",
          "description" : "The customer's last name.",
          "minLength" : 1,
          "maxLength" : 128
        },
        "gender" : {
          "type" : "string",
          "example" : "female",
          "enum" : [ "male", "female", "other" ]
        },
        "mobile_phone" : {
          "type" : "string",
          "example" : "(398) 497-5566",
          "description" : "The customer's mobile phone number.",
          "maxLength" : 32
        },
        "telephone_number" : {
          "type" : "string",
          "example" : "(727) 787-0035 x164",
          "description" : "The customer's telephone number.",
          "maxLength" : 32
        },
        "email" : {
          "type" : "string",
          "example" : "tbauch@hotmail.com",
          "description" : "The customer's email address.",
          "maxLength" : 128
        },
        "job_title" : {
          "type" : "string",
          "example" : "Lathe Operator",
          "description" : "The customer's mobile phone number."
        },
        "preferred_language" : {
          "type" : "string",
          "example" : "ENG",
          "description" : "The customers preferred language. Uses 3 character ISO code 639-2/B. <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\" target=\"blank\">See list of accepted languages.</a>",
          "minLength" : 3,
          "maxLength" : 3
        },
        "address_1" : {
          "type" : "string",
          "example" : "Port Sharonton, ND 91137-9004",
          "maxLength" : 255
        },
        "address_2" : {
          "type" : "string",
          "example" : "43186 Nienow Summit, New Stewart, KS 73101",
          "maxLength" : 255
        },
        "address_city" : {
          "type" : "string",
          "example" : "Lake Hester",
          "maxLength" : 128
        },
        "address_county" : {
          "type" : "string",
          "example" : "Jefferson",
          "maxLength" : 128
        },
        "address_post_code" : {
          "type" : "string",
          "example" : "28312-2426",
          "maxLength" : 16
        },
        "address_country" : {
          "type" : "string",
          "example" : "GBR",
          "description" : "The country, specified as a 3 letter country code. <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1\" target=\"blank\">Full list of countries here.</a>.",
          "minLength" : 3,
          "maxLength" : 3
        },
        "customer_organization_name" : {
          "type" : "string",
          "example" : "Example organisation name",
          "description" : "The name of the customers organisation, if they have one.",
          "maxLength" : 255
        },
        "customer_organization_number" : {
          "type" : "string",
          "example" : "C5243242342",
          "description" : "The organisation number of the customers organisation.",
          "maxLength" : 128
        },
        "customer_organization_tax_id" : {
          "type" : "string",
          "example" : "T45234324324312321",
          "description" : "The customer's organisation tax reference number.",
          "maxLength" : 128
        },
        "additional" : {
          "$ref" : "#/definitions/Additional"
        }
      },
      "example" : {
        "data" : {
          "id" : "95268ed7-2f1e-4a8a-844c-c1d35ab1f63e",
          "first_name" : "Roman",
          "last_name" : "Hodkiewicz",
          "gender" : "male",
          "mobile_phone" : "247-726-7356 x266",
          "telephone_number" : "+1-742-252-7331",
          "email" : "emiliano.howe@thompson.com",
          "job_title" : "Textile Knitting Machine Operator",
          "preferred_language" : "eng",
          "address_1" : "3365 Lind Locks Apt. 353\nMooremouth, WI 69965-8555",
          "address_2" : "40014 Brett Villages\nHayesland, SD 58660-4300",
          "address_city" : "Vicenteberg",
          "address_county" : "Jefferson",
          "address_post_code" : "39456",
          "address_country_code" : "USA",
          "customer_organization_name" : "Gabrielle Anderson Sr.",
          "customer_organization_number" : "kgzf5LC5xSxqd3SzU2i9Jer65Kd5EK0P",
          "customer_organization_tax_id" : "oayyopseAkODZzWhCCxvhgVHdSFMjAsp",
          "additional" : {
            "custom_id" : "xxx6w37651dg26",
            "special_rate" : 30,
            "VIP" : true,
            "etc" : "Etc, etc, etc."
          }
        }
      }
    },
    "PutCustomer" : {
      "properties" : {
        "customer_id" : {
          "type" : "string",
          "example" : "3329861723HAoq0qV",
          "description" : "The automatically assigned `ID` representing the customer.",
          "readOnly" : true,
          "minLength" : 32,
          "maxLength" : 64
        },
        "first_name" : {
          "type" : "string",
          "description" : "The customer's first name.",
          "minLength" : 1,
          "maxLength" : 128
        },
        "middle_names" : {
          "type" : "string",
          "example" : "Kailee",
          "description" : "Any middle name(s) which the customer has."
        },
        "last_name" : {
          "type" : "string",
          "example" : "Jones",
          "description" : "The customer's last name.",
          "minLength" : 1,
          "maxLength" : 128
        },
        "gender" : {
          "type" : "string",
          "example" : "female",
          "enum" : [ "male", "female", "other" ]
        },
        "mobile_phone" : {
          "type" : "string",
          "example" : "(398) 497-5566",
          "description" : "The customer's mobile phone number.",
          "maxLength" : 32
        },
        "telephone_number" : {
          "type" : "string",
          "example" : "(727) 787-0035 x164",
          "description" : "The customer's telephone number.",
          "maxLength" : 32
        },
        "email" : {
          "type" : "string",
          "example" : "tbauch@hotmail.com",
          "description" : "The customer's email address.",
          "maxLength" : 128
        },
        "job_title" : {
          "type" : "string",
          "example" : "Lathe Operator",
          "description" : "The customer's mobile phone number."
        },
        "preferred_language" : {
          "type" : "string",
          "example" : "ENG",
          "description" : "The customers preferred language. Uses 3 character ISO code 639-2/B. <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\" target=\"blank\">See list of accepted languages.</a>",
          "minLength" : 3,
          "maxLength" : 3
        },
        "address_1" : {
          "type" : "string",
          "example" : "Port Sharonton, ND 91137-9004",
          "maxLength" : 255
        },
        "address_2" : {
          "type" : "string",
          "example" : "43186 Nienow Summit, New Stewart, KS 73101",
          "maxLength" : 255
        },
        "address_city" : {
          "type" : "string",
          "example" : "Lake Hester",
          "maxLength" : 128
        },
        "address_county" : {
          "type" : "string",
          "example" : "Jefferson",
          "maxLength" : 128
        },
        "address_post_code" : {
          "type" : "string",
          "example" : "28312-2426",
          "maxLength" : 16
        },
        "address_country" : {
          "type" : "string",
          "example" : "GBR",
          "description" : "The country, specified as a 3 letter country code. <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1\" target=\"blank\">See list of accepted country codes.</a>",
          "minLength" : 3,
          "maxLength" : 3
        },
        "customer_organization_name" : {
          "type" : "string",
          "example" : "Example organisation name",
          "description" : "The name of the customers organisation, if they have one.",
          "maxLength" : 255
        },
        "customer_organization_number" : {
          "type" : "string",
          "example" : "C5243242342",
          "description" : "The organisation number of the customers organisation.",
          "maxLength" : 128
        },
        "customer_organization_tax_id" : {
          "type" : "string",
          "example" : "T45234324324312321",
          "description" : "The customer's organisation tax reference number.",
          "maxLength" : 128
        },
        "additional" : {
          "$ref" : "#/definitions/Additional"
        }
      },
      "example" : {
        "id" : "95268ed7-2f1e-4a8a-844c-c1d35ab1f63e",
        "first_name" : "Roman",
        "last_name" : "Hodkiewicz",
        "gender" : "male",
        "mobile_phone" : "247-726-7356 x266",
        "telephone_number" : "+1-742-252-7331",
        "email" : "emiliano.howe@thompson.com",
        "job_title" : "Textile Knitting Machine Operator",
        "preferred_language" : "eng",
        "address_1" : "3365 Lind Locks Apt. 353\nMooremouth, WI 69965-8555",
        "address_2" : "40014 Brett Villages\nHayesland, SD 58660-4300",
        "address_city" : "Vicenteberg",
        "address_county" : "Jefferson",
        "address_post_code" : "39456",
        "address_country_code" : "USA",
        "customer_organization_name" : "Gabrielle Anderson Sr.",
        "customer_organization_number" : "kgzf5LC5xSxqd3SzU2i9Jer65Kd5EK0P",
        "customer_organization_tax_id" : "oayyopseAkODZzWhCCxvhgVHdSFMjAsp",
        "additional" : {
          "custom_id" : "xxx6w37651dg26",
          "special_rate" : 30,
          "VIP" : true,
          "etc" : "Etc, etc, etc."
        }
      }
    },
    "GetCustomers" : {
      "properties" : {
        "customers" : {
          "type" : "array",
          "description" : "A list of customers linked to your bizpay account.",
          "items" : {
            "$ref" : "#/definitions/Customer"
          }
        },
        "links" : {
          "type" : "array",
          "description" : "A list of all the navigation links for the response.",
          "items" : {
            "$ref" : "#/definitions/pageLinks"
          }
        },
        "meta" : {
          "type" : "array",
          "description" : "A list of the response meta data.",
          "items" : {
            "$ref" : "#/definitions/pageMeta"
          }
        }
      },
      "example" : {
        "data" : [ {
          "id" : "64d7b590-fee1-4f16-b4ad-704d614cda9f",
          "first_name" : "Kailee",
          "last_name" : "Jones",
          "gender" : "other",
          "mobile_phone" : "(398) 497-5566",
          "telephone_number" : "(727) 787-0035 x164",
          "email" : "tbauch@hotmail.com",
          "job_title" : "Lathe Operator",
          "preferred_language" : "eng",
          "address_1" : "9482 Hailee Throughway\nPort Sharonton, ND 91137-9004",
          "address_2" : "43186 Nienow Summit\nNew Stewart, KS 73101",
          "address_city" : "Lake Hester",
          "address_county" : "Jefferson",
          "address_post_code" : "28312-2426",
          "address_country" : "USA",
          "customer_organization_name" : "Alvena Block",
          "customer_organization_number" : "ilyVMxhtu6bSbzQ4R1pyi4wu8VDzBkTK",
          "customer_organization_tax_id" : "waFPOttNWC873ZVkYRnehj7l52oq88WH",
          "additional" : {
            "custom_id" : "xxx6w37651dg26",
            "special_rate" : 30,
            "VIP" : true,
            "etc" : "Etc, etc, etc."
          }
        }, {
          "id" : "64d7b580-fee1-4f16-b4ad-704d614cda9f",
          "first_name" : "John",
          "last_name" : "Adams",
          "gender" : "other",
          "mobile_phone" : "(398) 497-5566",
          "telephone_number" : "(727) 787-0035 x164",
          "email" : "ja@hotmail.com",
          "job_title" : "Director",
          "preferred_language" : "eng",
          "address_1" : "9482 Hailee Throughway\nPort Sharonton, ND 91137-9004",
          "address_2" : "43186 Nienow Summit\nNew Stewart, KS 73101",
          "address_city" : "Lake Hester",
          "address_county" : "Jefferson",
          "address_post_code" : "28312-2426",
          "address_country" : "USA",
          "customer_organization_name" : "Alvena Block",
          "customer_organization_number" : "ilyVMxhtu6bSbzQ4R1pyi4wu8VDzBkTK",
          "customer_organization_tax_id" : "waFPOttNWC873ZVkYRnehj7l52oq88WH",
          "additional" : {
            "custom_id" : "xxx6w37651dg26",
            "special_rate" : 30,
            "VIP" : true,
            "etc" : "Etc, etc, etc."
          }
        }, {
          "id" : "64d7b580-fee1-4f16-b4ad-704d614cda9f",
          "first_name" : "John",
          "last_name" : "Adams",
          "gender" : "other",
          "mobile_phone" : "(398) 497-5566",
          "telephone_number" : "(727) 787-0035 x164",
          "email" : "ja@hotmail.com",
          "job_title" : "Director",
          "preferred_language" : "eng",
          "address_1" : "9482 Hailee Throughway\nPort Sharonton, ND 91137-9004",
          "address_2" : "43186 Nienow Summit\nNew Stewart, KS 73101",
          "address_city" : "Lake Hester",
          "address_county" : "Jefferson",
          "address_post_code" : "28312-2426",
          "address_country" : "USA",
          "customer_organization_name" : "Alvena Block",
          "customer_organization_number" : "ilyVMxhtu6bSbzQ4R1pyi4wu8VDzBkTK",
          "customer_organization_tax_id" : "waFPOttNWC873ZVkYRnehj7l52oq88WH",
          "additional" : {
            "custom_id" : "xxx6w37651dg26",
            "special_rate" : 30,
            "VIP" : true,
            "etc" : "Etc, etc, etc."
          }
        } ],
        "links" : {
          "first" : "https://api.bizpay.co.uk/api/v1.25/customers?page=1",
          "last" : "https://api.bizpay.co.uk/api/v1.25/customers?page=50",
          "next" : "https://api.bizpay.co.uk/api/v1.25/customers?page=2"
        },
        "meta" : {
          "current_page" : 1,
          "from" : 1,
          "to" : 50,
          "last_page" : 50,
          "path" : "https://api.bizpay.co.uk/api/v1.25/customers",
          "per_page" : 50,
          "total" : 500
        }
      }
    },
    "AgreementCustomer" : {
      "required" : [ "first_name", "last_name" ],
      "properties" : {
        "first_name" : {
          "type" : "string",
          "description" : "The customer's first name.",
          "minLength" : 1,
          "maxLength" : 128
        },
        "middle_names" : {
          "type" : "string",
          "example" : "Kailee",
          "description" : "Any middle name(s) which the customer has."
        },
        "last_name" : {
          "type" : "string",
          "example" : "Jones",
          "description" : "The customer's last name.",
          "minLength" : 1,
          "maxLength" : 128
        },
        "gender" : {
          "type" : "string",
          "example" : "female",
          "enum" : [ "male", "female", "other" ]
        },
        "mobile_phone" : {
          "type" : "string",
          "example" : "(398) 497-5566",
          "description" : "The customer's mobile phone number.",
          "maxLength" : 32
        },
        "telephone_number" : {
          "type" : "string",
          "example" : "(727) 787-0035 x164",
          "description" : "The customer's telephone number.",
          "maxLength" : 32
        },
        "email" : {
          "type" : "string",
          "example" : "tbauch@hotmail.com",
          "description" : "The customer's email address.",
          "maxLength" : 128
        },
        "job_title" : {
          "type" : "string",
          "example" : "Lathe Operator",
          "description" : "The customer's mobile phone number."
        },
        "preferred_language" : {
          "type" : "string",
          "example" : "ENG",
          "description" : "The customers preferred language. Uses 3 character ISO code 639-2/B. <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\" target=\"blank\">See list of accepted languages.</a>",
          "minLength" : 3,
          "maxLength" : 3
        },
        "address_1" : {
          "type" : "string",
          "example" : "Port Sharonton, ND 91137-9004",
          "maxLength" : 255
        },
        "address_2" : {
          "type" : "string",
          "example" : "43186 Nienow Summit, New Stewart, KS 73101",
          "maxLength" : 255
        },
        "address_city" : {
          "type" : "string",
          "example" : "Lake Hester",
          "maxLength" : 128
        },
        "address_county" : {
          "type" : "string",
          "example" : "Jefferson",
          "maxLength" : 128
        },
        "address_post_code" : {
          "type" : "string",
          "example" : "28312-2426",
          "maxLength" : 16
        },
        "address_country" : {
          "type" : "string",
          "example" : "GBR",
          "description" : "The country, specified as a 3 letter country code. <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1\" target=\"blank\">See list of accepted country codes.</a>",
          "minLength" : 3,
          "maxLength" : 3
        },
        "customer_organization_name" : {
          "type" : "string",
          "example" : "Example organisation name",
          "description" : "The name of the customers organisation, if they have one.",
          "maxLength" : 255
        },
        "customer_organization_number" : {
          "type" : "string",
          "example" : "C5243242342",
          "description" : "The organisation number of the customers organisation.",
          "maxLength" : 128
        },
        "customer_organization_tax_id" : {
          "type" : "string",
          "example" : "T45234324324312321",
          "description" : "The customer's organisation tax reference number.",
          "maxLength" : 128
        },
        "additional" : {
          "$ref" : "#/definitions/Additional"
        }
      },
      "description" : "An array of fields which relate to the customer.",
      "example" : {
        "first_name" : "Kailee",
        "last_name" : "Jones",
        "gender" : "other",
        "mobile_phone" : "(398) 497-5566",
        "telephone_number" : "(727) 787-0035 x164",
        "email" : "tbauch@hotmail.com",
        "job_title" : "Lathe Operator",
        "preferred_language" : "eng",
        "address_1" : "9482 Hailee Throughway, Port Sharonton, ND 91137-9004",
        "address_2" : "43186 Nienow Summit, New Stewart, KS 73101",
        "address_city" : "Lake Hester",
        "address_county" : "Jefferson",
        "address_post_code" : "28312-2426",
        "address_country" : "GBR",
        "customer_organization_name" : "Alvena Block",
        "customer_organization_number" : "ilyVMxhtu6bSbzQ4R1pyi4wu8VDzBkTK",
        "customer_organization_tax_id" : "waFPOttNWC873ZVkYRnehj7l52oq88WH",
        "additional" : {
          "custom_id" : "xxx6w37651dg26",
          "special_rate" : 30,
          "VIP" : true,
          "etc" : "Etc, etc, etc."
        }
      }
    },
    "PutPlan" : {
      "allOf" : [ {
        "$ref" : "#/definitions/UpdatePlan"
      }, {
        "type" : "object",
        "example" : {
          "period" : "biweekly",
          "name" : "USD biweekly plan with fixed increases - max 3 months.",
          "terms_file" : "http://www.validurl.com/terms.pdf",
          "type" : "instalment",
          "terms_name" : "Terms and Conditions.pdf",
          "pricing_options" : [ {
            "periods" : 12,
            "default" : false,
            "price" : 100,
            "tax" : 20,
            "name" : "Instalment fee",
            "show" : false,
            "currency" : "USD",
            "type" : "split",
            "operator" : "currency",
            "refund_price" : 0,
            "refund_tax" : 0,
            "refund_operator" : "currency"
          }, {
            "periods" : 12,
            "default" : false,
            "price" : 100,
            "tax" : 20,
            "name" : "Instalment fee",
            "show" : false,
            "currency" : "USD",
            "type" : "split",
            "operator" : "currency",
            "refund_price" : 0,
            "refund_tax" : 0,
            "refund_operator" : "currency"
          } ],
          "gateway_methods" : [ {
            "id" : "65149814-68e8-435c-a575-a73af9972d28",
            "name" : "Pay by card",
            "description" : "Live stripe gateway - xyz ltd",
            "default" : false,
            "reduction" : 0
          }, {
            "id" : "41249814-68e8-435c-a575-a73af9972d28",
            "name" : "Pay by bank transfer",
            "description" : "Bank account 99021 - xyz ltd",
            "default" : true,
            "reduction" : 1.5
          } ]
        }
      } ]
    },
    "PostPlan" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Plan"
      }, {
        "type" : "object",
        "example" : {
          "period" : "biweekly",
          "name" : "USD biweekly plan with fixed increases - max 3 months.",
          "terms_file" : "http://www.validurl.com/terms.pdf",
          "type" : "instalment",
          "terms_name" : "Terms and Conditions.pdf",
          "pricing_options" : [ {
            "periods" : 12,
            "default" : false,
            "price" : 100,
            "tax" : 20,
            "name" : "Instalment fee",
            "show" : false,
            "currency" : "USD",
            "type" : "split",
            "operator" : "currency",
            "refund_price" : 0,
            "refund_tax" : 0,
            "refund_operator" : "currency"
          }, {
            "periods" : 12,
            "default" : false,
            "price" : 100,
            "tax" : 20,
            "name" : "Instalment fee",
            "show" : false,
            "currency" : "USD",
            "type" : "split",
            "operator" : "currency",
            "refund_price" : 0,
            "refund_tax" : 0,
            "refund_operator" : "currency"
          } ],
          "gateway_methods" : [ {
            "id" : "65149814-68e8-435c-a575-a73af9972d28",
            "name" : "Pay by card",
            "description" : "Live stripe gateway - xyz ltd",
            "default" : false,
            "reduction" : 0
          }, {
            "id" : "41249814-68e8-435c-a575-a73af9972d28",
            "name" : "Pay by bank transfer",
            "description" : "Bank account 99021 - xyz ltd",
            "default" : true,
            "reduction" : 1.5
          } ]
        }
      } ]
    },
    "GetPlan" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Plan"
      }, {
        "type" : "object",
        "example" : {
          "data" : {
            "id" : "11a38b9a-b3da-360f-9353-a5a725514269",
            "period" : "biweekly",
            "name" : "USD biweekly plan with fixed increases - max 3 months.",
            "terms_file" : "http://www.validurl.com/terms.pdf",
            "type" : "instalment",
            "terms_name" : "Terms and Conditions.pdf",
            "pricing_options" : [ {
              "id" : "2211a38b9a-b3da-360f-9353-a5a725514269",
              "periods" : 12,
              "default" : false,
              "price" : 100,
              "tax" : 20,
              "name" : "Instalment fee",
              "show" : false,
              "currency" : "USD",
              "type" : "split",
              "operator" : "currency",
              "refund_price" : 0,
              "refund_tax" : 0,
              "refund_operator" : "currency"
            }, {
              "id" : "44a38b9a-b3da-360f-9353-a5a725514269",
              "periods" : 12,
              "price" : 100,
              "tax" : 20,
              "default" : false,
              "name" : "Instalment fee",
              "show" : false,
              "currency" : "USD",
              "type" : "split",
              "operator" : "currency",
              "refund_price" : 0,
              "refund_tax" : 0,
              "refund_operator" : "currency"
            } ],
            "gateway_methods" : [ {
              "id" : "65149814-68e8-435c-a575-a73af9972d28",
              "name" : "Pay by card",
              "description" : "Live stripe gateway - xyz ltd",
              "default" : false,
              "reduction" : 0
            }, {
              "id" : "41249814-68e8-435c-a575-a73af9972d28",
              "name" : "Pay by bank transfer",
              "description" : "Bank account 99021 - xyz ltd",
              "default" : true,
              "reduction" : 1.5
            } ]
          }
        }
      } ]
    },
    "GetPlans" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Plan"
      }, {
        "type" : "object",
        "example" : {
          "data" : [ {
            "id" : "11a38b9a-b3da-360f-9353-a5a725514269",
            "period" : "biweekly",
            "name" : "USD biweekly plan with fixed increases - max 3 months.",
            "terms_file" : "http://www.validurl.com/terms.pdf",
            "type" : "instalment",
            "terms_name" : "Terms and Conditions.pdf",
            "pricing" : [ {
              "id" : "2211a38b9a-b3da-360f-9353-a5a725514269",
              "periods" : 12,
              "default" : false,
              "price" : 100,
              "tax" : 20,
              "name" : "Instalment fee",
              "show" : false,
              "currency" : "USD",
              "type" : "split",
              "operator" : "currency",
              "pre_tax_refund" : 0,
              "refund_tax" : 0,
              "refund_operator" : "currency"
            }, {
              "id" : "44a38b9a-b3da-360f-9353-a5a725514269",
              "periods" : 12,
              "default" : false,
              "price" : 100,
              "tax" : 20,
              "name" : "Instalment fee",
              "show" : false,
              "currency" : "USD",
              "type" : "split",
              "operator" : "currency",
              "refund_price" : 0,
              "refund_tax" : 0,
              "refund_operator" : "currency"
            } ],
            "gateway_methods" : [ {
              "id" : "65149814-68e8-435c-a575-a73af9972d28",
              "name" : "Pay by card",
              "description" : "Live stripe gateway - xyz ltd",
              "default" : false,
              "reduction" : 0
            }, {
              "id" : "41249814-68e8-435c-a575-a73af9972d28",
              "name" : "Pay by bank transfer",
              "description" : "Bank account 99021 - xyz ltd",
              "default" : true,
              "reduction" : 1.5
            } ]
          }, {
            "id" : "11a38b9a-b3da-360f-9353-a5a725514269",
            "period" : "biweekly",
            "name" : "USD biweekly plan with fixed increases - max 3 months.",
            "terms_file" : "http://www.validurl.com/terms.pdf",
            "type" : "instalment",
            "terms_name" : "Terms and Conditions.pdf",
            "pricing" : [ {
              "id" : "2211a38b9a-b3da-360f-9353-a5a725514269",
              "periods" : 12,
              "default" : false,
              "price" : 100,
              "tax" : 20,
              "name" : "Instalment fee",
              "show" : false,
              "currency" : "USD",
              "type" : "split",
              "operator" : "currency",
              "refund_price" : 0,
              "refund_tax" : 0,
              "refund_operator" : "currency"
            }, {
              "id" : "44a38b9a-b3da-360f-9353-a5a725514269",
              "periods" : 12,
              "default" : false,
              "price" : 100,
              "tax" : 20,
              "name" : "Instalment fee",
              "show" : false,
              "currency" : "USD",
              "type" : "split",
              "operator" : "currency",
              "refund_price" : 0,
              "refund_tax" : 0,
              "refund_operator" : "currency"
            } ],
            "gateway_methods" : [ {
              "id" : "65149814-68e8-435c-a575-a73af9972d28",
              "name" : "Pay by card",
              "description" : "Live stripe gateway - xyz ltd",
              "default" : false,
              "reduction" : 0
            }, {
              "id" : "41249814-68e8-435c-a575-a73af9972d28",
              "name" : "Pay by bank transfer",
              "description" : "Bank account 99021 - xyz ltd",
              "default" : true,
              "reduction" : 1.5
            } ]
          }, {
            "id" : "11a38b9a-b3da-360f-9353-a5a725514269",
            "period" : "biweekly",
            "name" : "USD biweekly plan with fixed increases - max 3 months.",
            "terms_file" : "http://www.validurl.com/terms.pdf",
            "type" : "instalment",
            "terms_name" : "Terms and Conditions.pdf",
            "pricing" : [ {
              "id" : "2211a38b9a-b3da-360f-9353-a5a725514269",
              "periods" : 12,
              "default" : false,
              "price" : 100,
              "tax" : 20,
              "name" : "Instalment fee",
              "show" : false,
              "currency" : "USD",
              "type" : "split",
              "operator" : "currency",
              "refund_price" : 0,
              "refund_tax" : 0,
              "refund_operator" : "currency"
            }, {
              "id" : "44a38b9a-b3da-360f-9353-a5a725514269",
              "periods" : 12,
              "default" : false,
              "price" : 100,
              "tax" : 20,
              "name" : "Instalment fee",
              "show" : false,
              "currency" : "USD",
              "type" : "split",
              "operator" : "currency",
              "refund_price" : 0,
              "refund_tax" : 0,
              "refund_operator" : "currency"
            } ],
            "gateway_methods" : [ {
              "id" : "65149814-68e8-435c-a575-a73af9972d28",
              "name" : "Pay by card",
              "description" : "Live stripe gateway - xyz ltd",
              "default" : false,
              "reduction" : 0
            }, {
              "id" : "41249814-68e8-435c-a575-a73af9972d28",
              "name" : "Pay by bank transfer",
              "description" : "Bank account 99021 - xyz ltd",
              "default" : true,
              "reduction" : 1.5
            } ]
          } ]
        }
      } ]
    },
    "Plan" : {
      "required" : [ "name", "period", "type" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "11a38b9a-b3da-360f-9353-a5a725514269",
          "description" : "The automatically generated id for a specific plan.",
          "readOnly" : true,
          "maxLength" : 64
        },
        "name" : {
          "type" : "string",
          "example" : "USD biweekly plan with fixed increases - max 3 months.",
          "description" : "This allows you to identify the plan created with a memorable description.",
          "maxLength" : 256
        },
        "type" : {
          "type" : "string",
          "example" : "instalment",
          "description" : "The plan type allows you to specify whether the plan is a series of payments split over the selected term (instalment) or a single payment which is due at the end of the chosen term (invoice).",
          "maxLength" : 12,
          "enum" : [ "instalment", "invoice" ]
        },
        "period" : {
          "type" : "string",
          "example" : "biweekly",
          "description" : "This allows you to set the base interval which will be used to determine the time period that applies to the periods which yreou specifiedy in the pricing sub array. For example, if you specify monthly here, period 1 will be one month.",
          "maxLength" : 12,
          "enum" : [ "yearly", "biyearly", "quarterly", "monthly", "biweekly", "weekly", "daily" ]
        },
        "terms_file" : {
          "type" : "string",
          "example" : "http://app.bizpay.co.uk/seller/terms.pdf",
          "description" : "This should be a link to the terms and conditions which you would like to use for this plan. The API will immediately download this file and save it for your plan. The maximum possible file size is 10mb and only PDF files are supported.",
          "x-nullable" : true
        },
        "terms_name" : {
          "type" : "string",
          "example" : "Terms and Conditions.pdf",
          "description" : "This option allows you to specify a file name for your terms and conditions file. If not specified, the file name from the uploaded file will be used as is.",
          "maxLength" : 128
        },
        "pricing" : {
          "$ref" : "#/definitions/PlanPricing"
        },
        "gateway_methods" : {
          "$ref" : "#/definitions/PlanGatewayMethods"
        }
      }
    },
    "UpdatePlan" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "11a38b9a-b3da-360f-9353-a5a725514269",
          "description" : "The automatically generated id for a specific plan.",
          "readOnly" : true,
          "maxLength" : 64
        },
        "name" : {
          "type" : "string",
          "example" : "USD biweekly plan with fixed increases - max 3 months.",
          "description" : "This allows you to identify the plan created with a memorable description.",
          "maxLength" : 256
        },
        "type" : {
          "type" : "string",
          "example" : "instalment",
          "description" : "The plan type allows you to specify whether the plan is a series of payments split over the selected term (instalment) or a single payment which is due at the end of the chosen term (invoice).",
          "maxLength" : 12,
          "enum" : [ "instalment", "invoice" ]
        },
        "period" : {
          "type" : "string",
          "example" : "biweekly",
          "description" : "This allows you to set the base interval which will be used to determine the time period that applies to the periods which yreou specifiedy in the pricing sub array. For example, if you specify monthly here, period 1 will be one month.",
          "maxLength" : 12,
          "enum" : [ "yearly", "biyearly", "quarterly", "monthly", "biweekly", "weekly", "daily" ]
        },
        "terms_file" : {
          "type" : "string",
          "example" : "http://www.validurl.com/terms.pdf",
          "description" : "This should be a link to the terms and conditions which you would like to use for this plan. The API will immediately download this file and save it for your plan. The maximum possible file size is 10mb and only PDF files are supported.",
          "maxLength" : 256
        },
        "terms_name" : {
          "type" : "string",
          "example" : "Terms and Conditions.pdf",
          "description" : "This option allows you to specify a file name for your terms and conditions file. If not specified, the file name from the uploaded file will be used as is.",
          "maxLength" : 128
        },
        "pricing" : {
          "$ref" : "#/definitions/PutPlanPricing"
        },
        "gateway_methods" : {
          "$ref" : "#/definitions/PlanGatewayMethods"
        }
      }
    },
    "PutPlanPricing" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "11a38b9a-b3da-360f-9353-a5a725514269",
          "description" : "The automatically generated id for a specific pricing option.",
          "readOnly" : true,
          "maxLength" : 64
        },
        "name" : {
          "type" : "string",
          "example" : "Instalment fee",
          "description" : "This allows you to specify a name which will be used on a receipt should this option be selected. Example, `Instalment fee`, `Administration charge`, etc.",
          "minLength" : 1,
          "maxLength" : 256
        },
        "show" : {
          "type" : "boolean",
          "example" : false,
          "description" : "If this is set to true, when the pricing option is selected to create an agreement, the fee will be listed in the agreement as a product with the description given in the name element of the pricing array. If set to false, the amounts specified in the pricing array will not be itemised.",
          "default" : false
        },
        "default" : {
          "type" : "boolean",
          "example" : false,
          "description" : "This allows you to set this specific option as the default option witin the pricing array, only one option can be specified as the default.",
          "default" : false
        },
        "label" : {
          "type" : "string",
          "example" : "1 month",
          "description" : "When our standard interfaces are used, this label will be shown to describe the term of this pricing option to buyers. This field is not required and if nothing is specified, our system will populate this for you automatically.",
          "maxLength" : 32,
          "x-nullable" : true
        },
        "short_label" : {
          "type" : "string",
          "example" : "1m",
          "description" : "When our interfaces are used, this field will be shown to buyers when they access the page using a small screen. This field is not required and if nothing is specified, our system will populate this for you automatically.",
          "maxLength" : 3,
          "x-nullable" : true
        },
        "operator" : {
          "type" : "string",
          "example" : "currency",
          "description" : "This allows you to set the type of pricing change you are making for this duration, there are two valid options, changing the price based on a fixed unit `'currency'` and changing the price based on a percentage, `'percent'`. This setting applies for both `price` and `tax`. *Note if you select percentage your input should not be put in as decimals - 10% for example should not be 0.1 it should be 10.",
          "enum" : [ "currency", "percent" ]
        },
        "currency" : {
          "type" : "string",
          "example" : "USD",
          "description" : "This field allows you to specify the currency for the each pricing option you create. Specified as a 3 character ISO currency field. <a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"blank\">Full list of currencies here.</a>.",
          "minLength" : 3,
          "maxLength" : 3
        },
        "type" : {
          "type" : "string",
          "example" : "split",
          "description" : "This allows you to set whether you would like the amounts which have been added to the price by the plan to be included in the first payment made within the plan `upfront` or whether they should be split evenly across the total number of periods `split`.",
          "enum" : [ "upfront", "split" ]
        },
        "periods" : {
          "type" : "integer",
          "example" : 12,
          "description" : "This is the amount of time which relates to the pricing option, denominated based on the period specified. The lowest amount which can be set is 1 which would mean that there would be one payment in the plan which would start based on the quote or agreement `start_date`.",
          "minimum" : 1
        },
        "pre_tax_price" : {
          "type" : "integer",
          "example" : 100,
          "description" : "This allows you to specify the amount of change you would like to make for this pricing option. This is either a fixed amount or a percentage - defined in `operator` - and can be positive or negative. The should not include any tax specified in `tax`. For example. If `pre_tax_price` is GBP 100 and `tax_price` is GBP 20. The fee to be charged is 100 (pre_tax) + 20 (tax) = GBP 120 (`total_price`)."
        },
        "tax_price" : {
          "type" : "integer",
          "example" : 20,
          "description" : "This specifies the tax which applies to any additional charge which is being added. This is either a fixed amount or a percentage - defined in price_change_type. If percentage is selected, the value specified will be calculated as a percified percentage of `pre_tax_price`."
        },
        "refund_operator" : {
          "type" : "string",
          "example" : "currency",
          "description" : "This allows you to set the type of refund, there are two valid options, refunding based on the price based using a fixed unit `'currency'` and refunding based on a percentage, `'percent'`. *Note if you select percentage your input should not be put in as decimals - 10% for example should not be 0.1 it should be 1000 as percentages will always have two decimal places added in a similar way to currency.",
          "enum" : [ "currency", "percentage" ]
        },
        "pre_tax_refund" : {
          "type" : "number",
          "example" : 500.0,
          "description" : "This allows you to set the amount which can be refunded for this product if a refund request is made by a customer."
        },
        "tax_refund" : {
          "type" : "number",
          "example" : 50.0,
          "description" : "This allows you to set the amount which can be refunded for this product if a refund request is made by a customer."
        }
      },
      "description" : "This array allows you to specify all the pricing options you would like to offer within this plan."
    },
    "PlanPricing" : {
      "required" : [ "currency", "default", "name", "operator", "periods", "pre_tax_price", "pre_tax_refund", "refund_operator", "tax_price", "tax_refund", "type" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "11a38b9a-b3da-360f-9353-a5a725514269",
          "description" : "The automatically generated id for a specific pricing option.",
          "readOnly" : true,
          "maxLength" : 64
        },
        "name" : {
          "type" : "string",
          "example" : "Instalment fee",
          "description" : "This allows you to specify a name which will be used on a receipt should this option be selected. Example, `Instalment fee`, `Administration charge`, etc.",
          "minLength" : 1,
          "maxLength" : 256
        },
        "default" : {
          "type" : "boolean",
          "example" : false,
          "description" : "This allows you to set this specific option as the default option witin the pricing array, only one option can be specified as the default.",
          "default" : false
        },
        "label" : {
          "type" : "string",
          "example" : "1 month",
          "description" : "When our standard interfaces are used, this label will be shown to describe the term of this pricing option to buyers. This field is not required and if nothing is specified, our system will populate this for you automatically.",
          "x-nullable" : true
        },
        "short_label" : {
          "type" : "string",
          "example" : "1m",
          "description" : "When our interfaces are used, this field will be shown to buyers when they access the page using a small screen. This field is not required and if nothing is specified, our system will populate this for you automatically.",
          "x-nullable" : true
        },
        "operator" : {
          "type" : "string",
          "example" : "currency",
          "description" : "This allows you to set the type of pricing change you are making for this duration, there are two valid options, changing the price based on a fixed unit `'currency'` and changing the price based on a percentage, `'percent'`. This setting applies for both `price` and `tax`. *Note if you select percentage your input should not be put in as decimals - 10% for example should not be 0.1 it should be 10.",
          "enum" : [ "currency", "percent" ]
        },
        "currency" : {
          "type" : "string",
          "example" : "USD",
          "description" : "This field allows you to specify the currency for the each pricing option you create. Specified as a 3 character ISO currency field, this can also be set to ALL to signify its applicable to any currency. We recommend using the percentage operator when specifying plans which apply for all currencies. <a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"blank\">You can see the full list of the ISO 4217 currency codes here.</a>",
          "minLength" : 3,
          "maxLength" : 3
        },
        "type" : {
          "type" : "string",
          "example" : "split",
          "description" : "This allows you to set whether you would like the amounts which have been added to the price by the plan to be included in the first payment made within the plan `upfront` or whether they should be split evenly across the total number of periods `split`.",
          "enum" : [ "upfront", "split" ]
        },
        "periods" : {
          "type" : "integer",
          "example" : 12,
          "description" : "This is the amount of time which relates to the pricing option, denominated based on the period specified. The lowest amount which can be set is 1 which would mean that there would be one payment in the plan which would start based on the quote or agreement `start_date`.",
          "minimum" : 1
        },
        "pre_tax_price" : {
          "type" : "integer",
          "example" : 100,
          "description" : "This allows you to specify the amount of change you would like to make for this pricing option. The price should be before any tax is added by `tax_price`. The amount should be specified in either a fixed amount or a percentage - defined in `operator` - and can be positive or negative. <br> If currency amounts are being specified the decimals will be calculated based on the currency selected. For example 116 USD will be interpred as one dollar 16 cents.<br>For percentages two decimal places will be added and 116 will be interpreted as 1.16 %."
        },
        "tax_price" : {
          "type" : "integer",
          "example" : 20,
          "description" : "This specifies how much the additional charge should be taxed. This is either a fixed amount or a percentage - defined in price_change_type - and can be positive or negative. If percentage is selected, the value specified will be calculated as a percentage of the `pre_tax_price`. <br>*Note if currency amounts are being specified the decimals will be calculated based on the currency selected. For example 116 USD will be interpred as one dollar 16 cents.<br>For percentages two decimal places will be added and 116 will be interpreted as 1.16 %."
        },
        "total_price" : {
          "type" : "integer",
          "example" : 500000,
          "description" : "This amount is calculated by our system by adding the `pre_tax_price` and `tax_price`.",
          "readOnly" : true
        },
        "refund_operator" : {
          "type" : "string",
          "example" : "currency",
          "description" : "This allows you to set the type of pricing change you are making for this duration, there are two valid options, changing the price based on a fixed unit `'currency'` and changing the price based on a percentage, `'percent'`. This setting applies for both `price` and `tax`. <br>*Note if currency amounts are being specified the decimals will be calculated based on the currency selected. For example 116 USD will be interpred as one dollar 16 cents.<br>For percentages 116 will be interpreted as 1.16 %.'",
          "enum" : [ "currency", "percentage" ]
        },
        "pre_tax_refund" : {
          "type" : "number",
          "example" : 500.0,
          "description" : "This allows you to set the amount which can be refunded from the `pre_tax_price` for the product if a refund request is made. <br> If currency amounts are being specified the decimals will be calculated based on the currency selected. For example 116 USD will be interpred as one dollar 16 cents.<br>For percentages 116 will be interpreted as 1.16 %."
        },
        "tax_refund" : {
          "type" : "number",
          "example" : 50.0,
          "description" : "This allows you to set the amount of tax which should be refunded from the `tax_price` of the product if a refund request is made.<br> *Note if currency amounts are being specified the decimals will be calculated based on the currency selected. For example 116 USD will be interpred as one dollar 16 cents.<br>For percentages 116 will be interpreted as 1.16 %.' "
        },
        "total_refund" : {
          "type" : "integer",
          "example" : 550,
          "description" : "The `total_refund` is a system calculated value based on adding the `pre_tax_refund` and `tax_refund` amounts together.",
          "readOnly" : true
        }
      },
      "description" : "This array allows you to specify all the pricing options you would like to offer within this plan."
    },
    "PlanGatewayMethods" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "11a38b9a-b3da-360f-9353-a5a725514269",
          "description" : "The id for the specific payment method option you would like to use. If only the gateway method is specified the rest of the values will be popuplated for you based on the values stored within the gateway method itself.",
          "maxLength" : 64
        },
        "name" : {
          "type" : "string",
          "example" : "Pay by card",
          "description" : "The name field allows you to specify a name for this payment method. If the default bizpay quote and agreement forms are used this name will be shown to customers. Example 'Pay by card'.",
          "maxLength" : 256
        },
        "description" : {
          "type" : "string",
          "example" : "Stripe test gateway",
          "description" : "The description field allows you to specify an internal name for this gateway.",
          "maxLength" : 256
        },
        "default" : {
          "type" : "boolean",
          "example" : false,
          "description" : "The default setting allow you to specify whether this gateway should be the default payment option.",
          "default" : false
        },
        "reduction" : {
          "type" : "integer",
          "example" : "1 month",
          "description" : "The reduction setting allows you to specify a percentage reduction which should be applied to any charges paid using this payment metthod. Reduction only supports percentages and will automatically add two decimal places to any values you input.",
          "maximum" : 32,
          "x-nullable" : true
        }
      },
      "description" : "This array allows you to specify the payment methods to use within quotes and agreements that are generated using this plan. Input here is not required, if not specified the current live methods linked to your bizpay account will be used."
    },
    "Quote" : {
      "required" : [ "cancel_time", "cancel_type", "cancelable", "plan_id", "products", "refund_time", "refund_type", "refundable", "validity" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "2123332-b3da-360f-9353-a5a725514269",
          "description" : "The automatically generated id for a specific quote.",
          "readOnly" : true,
          "maxLength" : 64
        },
        "plan_id" : {
          "type" : "string",
          "example" : "11a38b9a-b3da-360f-9353-a5a72551426",
          "description" : "The automatically generated id for a specific plan.",
          "maxLength" : 64
        },
        "terms_file" : {
          "type" : "string",
          "example" : "http://app.bizpay.co.uk/seller/terms.pdf",
          "description" : "This is a URL which links to a PDF file that contains sale terms and conditions.",
          "readOnly" : true,
          "x-nullable" : true
        },
        "currency" : {
          "type" : "string",
          "example" : "USD",
          "description" : "This is where you can specify the currency which the quote is in. Uses ISO 3 character currency codes. Currencies can not be mixed together so all the products entered within the quote products_array must be priced in the same currency. <a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"blank\">You can see the full list of the ISO 4217 currency codes here.</a>",
          "minLength" : 3,
          "maxLength" : 3
        },
        "start_date" : {
          "type" : "string",
          "example" : "2018-05-31T08:26:31+00:00",
          "description" : "This field allows you to specify when the schedule of payments generated by the quote should begin. If not specified the quote creation date and time will be the start date. The required format is `yyyy-MM-ddTHH:mm:ss�hh:mm` the T is required between the date and time and the latter � xx:xx allows for timezone changes. <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"blank\">Full explanation here</a>."
        },
        "validity" : {
          "type" : "integer",
          "example" : 90,
          "description" : "This allows you to specify how long this quote should be valid for. This must be specified in minutes. 1 hour = 60 minutes, 1 day = 1440 minutes, 1 week = 10,080 minutes, etc."
        },
        "max_payment_date" : {
          "type" : "string",
          "example" : "2018-05-31T08:26:31+00:00",
          "description" : "'This field allows you to specify a date by which you want to have received all the payments for this quote. Specifying this date excludes all payment options which have payment dates beyond the date you specify. For example if you wanted to offer a monthly payment plan to a customer but wanted to make sure that all the payments for their quote were received 2 weeks before you delivered the last part of the order, you can specify that date as the maximum_payment_date. The quote will then ensure that amounts are calculated to match this constraint. The required format is `yyyy-MM-ddTHH:mm:ss�hh:mm` the T is required between the date and time and the latter � xx:xx allows for timezone changes. <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"blank\">Full explanation here</a>.'"
        },
        "period" : {
          "type" : "string",
          "example" : "monthly",
          "description" : "The time period which is applied to this quote, this value is specified by the linked plan.",
          "readOnly" : true
        },
        "link" : {
          "type" : "string",
          "example" : "https://links.bizpay.co.uk/124343524323nljdfhgg23hj",
          "description" : "A http:// link which can be used to preview this object using default interfaces which are linked to your account.",
          "readOnly" : true
        },
        "customer_id" : {
          "type" : "string",
          "example" : "3329861723HAoq0qV",
          "description" : "The automatically assigned `ID` representing a customer which is linked to the quote.",
          "minLength" : 32,
          "maxLength" : 64
        },
        "cancelable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "This specifies whether an agreement created from this quote can be cancelled or not. If you select yes and allow cancellation, you can select two additional parameters. `cancel_type`, which allows you to define what should happen to payments already paid and `cancel_time` which specifies the number of minutes within which the cancellation event is possible."
        },
        "cancel_type" : {
          "type" : "string",
          "example" : "refund_all",
          "description" : "This contols what happens in the event of cancellation and can be one of 3 options, `refund_all` which means refund everything which was paid. `refund_products` which means refund according to the refund amount specified in the product array. `non_refundable` which means do not refund anything.",
          "enum" : [ "refund_all", "refund_products", "non_refundable" ]
        },
        "cancel_time" : {
          "type" : "integer",
          "example" : 90,
          "description" : "Specify in minutes the amount of time within which an agreement created from this quote can be cancelled. This must be specified in minutes. 1 hour = 60 minutes, 1 day = 1440 minutes, 1 week = 10,080 minutes, etc. This will be applied from the start date."
        },
        "refundable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "This specifies whether an agreement created from this quote can be refunded or not. If you select yes and allow refunds you can select two additional parameters. `refund_type`, which allows you to define what should happen to payments already paid and `refund_time` which specifies the number of minutes within which a refund is possible."
        },
        "refund_type" : {
          "type" : "string",
          "example" : "refund_all",
          "description" : "This contols what happens in the event of cancellation and can be one of 3 options, `refund_all` which means refund everything which was paid. `refund_products` which means refund according to the refund field stored in the product array. `non_refundable` which means do not automatically refund anything. Refunds can be triggered manually within the administration console and a manual refund would override these values.",
          "enum" : [ "refund_all", "refund_products", "non_refundable" ]
        },
        "refund_time" : {
          "type" : "integer",
          "example" : 90,
          "description" : "Specify in minutes the amount of time within which an agreement created from this quote can be refunded. This must be specified in minutes. 1 hour = 60 minutes, 1 day = 1440 minutes, 1 week = 10,080 minutes, etc. This will be applied from the start date."
        },
        "require_method" : {
          "type" : "boolean",
          "example" : true,
          "description" : "This sets whether the agreement requires at least one valid payment method to be stored against the customer in order for the agreement to be created. If this is set to `true` and there is no payment token attached to the customer, agreement creation will fail. The default is `false` which means agreements can be created and payment methods added later.",
          "default" : false
        },
        "first_payment" : {
          "type" : "boolean",
          "example" : true,
          "description" : "This sets whether the first payment should be taken successfully before an agreement is created. If set to `true` agreement creation will fail if the payment is not made successfully. The default is `false` which means that an agreement can be created even if the first payment method fails and new payment methods can be added later to capture the failed payment.",
          "default" : false
        },
        "logo" : {
          "type" : "string",
          "example" : "http://company.com/logo.png",
          "description" : "This is a link to the logo which will be shown the link form if it is generated."
        },
        "additional" : {
          "$ref" : "#/definitions/Additional"
        },
        "seller" : {
          "$ref" : "#/definitions/Seller"
        },
        "payment_methods" : {
          "type" : "array",
          "description" : "This read only array lists out the supported payment methods and settings which determine how they should be processed. These are defined in the linked plan.",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/PaymentMethods"
          }
        },
        "products" : {
          "type" : "array",
          "description" : "This allows you to specify the products which are being sold and represents the basket contents. The required fields are explained in detail below. You are free to add additional fields to products using the additonal array and these will be returned with the product data by all our endpoints.",
          "items" : {
            "$ref" : "#/definitions/Product"
          }
        },
        "pricing" : {
          "type" : "array",
          "description" : "This array represents the pricing options which are available within the quote.",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/QuotePricing"
          }
        }
      },
      "example" : {
        "data" : {
          "id" : "25f7629b-a4fc-4bb6-a8e1-07ad275b11a1",
          "plan_id" : "11f7629b-a4ff-4bb6-a8e1-07ad275b11a1",
          "terms_file" : "http://app.bizpay.co.uk/seller/terms.pdf",
          "currency" : "USD",
          "start_date" : "2018-05-31T14:43:59+00:00",
          "validity" : 7200,
          "max_payment_date" : "2018-09-30T14:43:59+00:00",
          "period" : "weekly",
          "link" : "https://links.bizpay.co.uk/dsfhdfh3238ry7ei",
          "cancelable" : false,
          "refundable" : false,
          "require_method" : false,
          "first_payment" : true,
          "logo" : "http://company.com/logo.png",
          "additional" : {
            "special_id" : "y78gh7hg738gheuih43",
            "etc" : "Etc, etc, etc."
          },
          "seller" : {
            "name" : "Acme llc",
            "email" : "customerservice@acme.co.uk",
            "website" : "www.acme.com",
            "phone" : "0800 090 090",
            "additional" : {
              "special_id" : "y78gh7hg738gheuih437",
              "limited_edition" : true,
              "etc" : "Etc, etc, etc."
            }
          },
          "payment_methods" : [ {
            "id" : "32432-2fvsdq34-23grh34y-32f2h554h7h",
            "name" : "Credit Card",
            "live" : true,
            "show" : false,
            "reduction" : 1000,
            "operator" : "percentage",
            "gateway" : "stripe",
            "method_type" : "card",
            "description" : "Payment by card",
            "order" : 1,
            "details" : {
              "public_key\"" : "pk_test_4jmhvCsJvYrCDZUljspbKpYs"
            }
          }, {
            "name\"" : "Bank Account",
            "live" : true,
            "show" : false,
            "reduction" : 500,
            "operator" : "percentage",
            "gateway" : "cash",
            "method_type" : "bank_account",
            "description" : "Payment through Bank Account",
            "order" : 2,
            "details" : {
              "account_number" : 938423423,
              "sort_code" : "30-30-30",
              "account_holder" : "bizpay ltd",
              "bank_name\"" : "Barclays",
              "bank_location" : "London",
              "bic" : "GB21321321321",
              "IBAN" : "GB21312321312",
              "SWIFT" : 2314235436
            }
          } ],
          "products" : [ {
            "id" : "99997a3a-5f36-4baf-964e-d78e2bcc122f",
            "quantity" : 1,
            "description" : "An Amazing Product",
            "price" : "25000",
            "tax" : "0",
            "first_payment" : "0",
            "refund_price" : "0",
            "refund_tax" : "0",
            "additional" : {
              "special_id" : "y78gh7hg738gheuih43",
              "remaining_inventory" : 3,
              "limited_edition" : true,
              "etc" : "Etc, etc, etc."
            }
          }, {
            "id" : "99997a3a-5f36-4baf-964e-d78e2bcc122f",
            "quantity" : 1,
            "description" : "An Amazing Product",
            "price" : "25000",
            "tax" : "0",
            "first_payment" : "0",
            "refund_price" : "0",
            "refund_tax" : "0",
            "additional" : {
              "special_id" : "y78gh7hg738gheuih43",
              "remaining_inventory" : 3,
              "limited_edition" : true,
              "etc" : "Etc, etc, etc."
            }
          } ],
          "pricing" : [ {
            "quote_pricing_id" : "92447a3a-5f36-4baf-964e-d78e2bcc122f",
            "plan" : {
              "name" : "Admin fee",
              "pre_tax_price" : 0,
              "tax_price" : 0,
              "total_price" : 0,
              "label" : "Now",
              "short_label" : "Now",
              "default" : false
            },
            "quote" : {
              "first_payment_amount" : 100,
              "pre_tax_price" : 50000,
              "tax_price" : 5000,
              "total_price" : 55000
            },
            "payments" : [ {
              "id" : "19d01806-67f6-48ce-a48a-923a29a58609",
              "due_date" : "2018-08-17T14:43:59+00:00",
              "amount" : 55000
            } ]
          }, {
            "quote_pricing_id" : "74025c54-b88f-4260-b690-af9d9476ee5a",
            "plan" : {
              "name" : "Admin fee",
              "pre_tax_price" : 100,
              "tax_price" : 50,
              "total_price" : 150,
              "label" : "1 week",
              "short_label" : "1w",
              "default" : true
            },
            "quote" : {
              "first_payment_amount" : 27575,
              "pre_tax_price" : 55150,
              "tax_price" : 50,
              "total_price" : 55150
            },
            "payments" : [ {
              "id" : "19d01806-67f6-48ce-a48a-923a29a58609",
              "due_date" : "2018-08-17T14:43:59+00:00",
              "amount" : 27575
            }, {
              "id" : "29d01806-67f6-48ce-a48a-923a29a58609",
              "due_date" : "2018-08-24T14:43:59+00:00",
              "amount" : 27575
            } ]
          } ]
        }
      }
    },
    "AgreementQuote" : {
      "required" : [ "cancel_time", "cancel_type", "cancelable", "charge_automatically", "currency", "first_payment", "plan_id", "products", "recalculate_due_dates", "refund_time", "refund_type", "refundable" ],
      "properties" : {
        "plan_id" : {
          "type" : "string",
          "example" : "11a38b9a-b3da-360f-9353-a5a72551426",
          "description" : "The automatically generated id for a specific plan.",
          "maxLength" : 64
        },
        "terms_file" : {
          "type" : "string",
          "example" : "http://app.bizpay.co.uk/seller/terms.pdf",
          "description" : "This is a URL which links to a PDF file that contains sale terms and conditions.",
          "readOnly" : true,
          "x-nullable" : true
        },
        "currency" : {
          "type" : "string",
          "example" : "USD",
          "description" : "This is where you can specify currency. Uses ISO 3 character currency codes. Currencies can not be mixed together so all the products entered within the quote products_array must be priced in the same currency. <a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"blank\">Full list of currencies here.</a>",
          "minLength" : 3,
          "maxLength" : 3
        },
        "start_date" : {
          "type" : "string",
          "example" : "2018-05-31T08:26:31+00:00",
          "description" : "This field allows you to specify when the schedule of payments should begin. If not specified the creation date and time will be the start date. The required format is `yyyy-MM-ddTHH:mm:ss�hh:mm` the T is required between the date and time and the latter � xx:xx allows for timezone changes. <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"blank\">Full explanation here</a>.",
          "default" : "now"
        },
        "max_payment_date" : {
          "type" : "string",
          "example" : "2018-05-31T08:26:31+00:00",
          "description" : "'This field allows you to specify a date by which you want to have received all the payments. Specifying this date excludes all payment options which have payment dates beyond the date you specify. For example if you wanted to offer a monthly payment plan to a customer but wanted to make sure that all the payments were received 2 weeks before you delivered the last part of the order, you can specify that date as the maximum_payment_date. We will then ensure that amounts are calculated to match this constraint. The required format is `yyyy-MM-ddTHH:mm:ss�hh:mm` the T is required between the date and time and the latter � xx:xx allows for timezone changes. <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"blank\">Full explanation here</a>.'"
        },
        "period" : {
          "type" : "string",
          "example" : "monthly",
          "description" : "The time period which was used by the plan to generate pricing options.",
          "readOnly" : true
        },
        "customer_id" : {
          "type" : "string",
          "example" : "3329861723HAoq0qV",
          "description" : "The automatically assigned `ID` representing a customer.",
          "minLength" : 32,
          "maxLength" : 64
        },
        "cancelable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "This specifies whether an agreement created from based on the pricing model defined can be cancelled or not. If you select yes and allow cancellation, you need to set two additional parameters. `cancel_type`, which allows you to define what should happen to payments already paid and `cancel_time` which specifies the number of minutes within which the cancellation event is possible."
        },
        "cancel_type" : {
          "type" : "string",
          "example" : "refund_all",
          "description" : "This contols what happens in the event of cancellation and can be one of 3 options, `refund_all` which means refund everything which was paid. `refund_products` which means refund according to the refund amount specified in the product array. `non_refundable` which means do not refund anything.",
          "enum" : [ "refund_all", "refund_products", "non_refundable" ]
        },
        "cancel_time" : {
          "type" : "integer",
          "example" : 90,
          "description" : "Specify in minutes the amount of time within which cancellation can be triggered. This must be specified in minutes. 1 hour = 60 minutes, 1 day = 1440 minutes, 1 week = 10,080 minutes, etc."
        },
        "refundable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "This specifies whether an agreement created from this pricing model can be refunded or not. If you select yes and allow refunds you can select two additional parameters. `refund_type`, which allows you to define what should happen to payments already paid and `refund_time` which specifies the number of minutes within which a refund is possible."
        },
        "refund_type" : {
          "type" : "string",
          "example" : "refund_all",
          "description" : "This contols what happens in the event of refund and can be one of 3 options, `refund_all` which means refund everything which was paid. `refund_products` which means refund according to the refund field stored in the product array. `non_refundable` which means do not automatically refund anything. Refunds can be triggered manually within the administration console and a manual refund would override these values.",
          "enum" : [ "refund_all", "refund_products", "non_refundable" ]
        },
        "refund_time" : {
          "type" : "integer",
          "example" : 90,
          "description" : "Specify in minutes the amount of time within which a refund can be triggered. This must be specified in minutes. 1 hour = 60 minutes, 1 day = 1440 minutes, 1 week = 10,080 minutes, etc."
        },
        "require_method" : {
          "type" : "boolean",
          "example" : true,
          "description" : "This sets whether an agreement created from this quote requires at least one valid payment method to be stored against the customer in order to be created. If this is set to `true` and there is no payment token attached to the customer, agreement creation will fail. The default is `false` which means agreements can be created and payment methods added later.",
          "default" : false
        },
        "recalculate_due_dates" : {
          "type" : "boolean",
          "example" : true,
          "description" : "When an agreement is created this field defines whether the due dates for payments should be created based on the due dates contained within a quote (set to false), or it whether they should be recalculated to start from the moment the agreement is created (set to true). This field is required."
        },
        "charge_automatically" : {
          "type" : "boolean",
          "example" : true,
          "description" : "When an agreement is created from a quote, this field sets whether the bizpay charging system should be used to charge the customer via their default payment method. Set this to `false` to turn off the automatic charging part of bizpay and use a seperate system to make charges."
        },
        "first_payment" : {
          "type" : "boolean",
          "example" : true,
          "description" : "This sets whether the first payment should be taken successfully before an agreement is created. If set to `true` agreement creation will fail if the payment is not made successfully. The default is `false` which means that an agreement can be created even if the first payment method fails and new payment methods can be added later to capture the failed payment.",
          "default" : false
        },
        "logo" : {
          "type" : "string",
          "example" : "http://company.com/logo.png",
          "description" : "This is a link to the logo which will be shown the link form if it is generated."
        },
        "additional" : {
          "$ref" : "#/definitions/Additional"
        },
        "products" : {
          "$ref" : "#/definitions/AgreementProduct"
        }
      }
    },
    "Agreement" : {
      "allOf" : [ {
        "$ref" : "#/definitions/AgreementQuote"
      }, {
        "type" : "object",
        "required" : [ "customer_id", "pricing_id" ],
        "properties" : {
          "link" : {
            "type" : "string",
            "example" : "https://links.bizpay.co.uk/124343524323nljdfhgg23hj",
            "description" : "A http:// link which can be used to preview this object using default interfaces which are linked to your account.",
            "readOnly" : true
          },
          "pricing_id" : {
            "type" : "string",
            "example" : "5bad6aef-77bc-4a88-80c8-a23bb2005dbc",
            "description" : "The auto generated ID for the group which represents a specific plan pricing option you would like to use for the agreement. This can be retrieved from either a quote or a plan."
          },
          "customer_id" : {
            "type" : "string",
            "example" : "3329861723HAoq0qV",
            "description" : "The automatically assigned `ID` representing a customer which is linked to the agreement.",
            "minLength" : 32,
            "maxLength" : 64
          },
          "charge_method_id" : {
            "type" : "string",
            "example" : "f4ac19af-1e11-43fa-bef2-67bf67b8605d",
            "description" : "An optional field which allows a specific charge method to be selected when an agreement is created."
          },
          "quote_id" : {
            "type" : "string",
            "example" : "12342h4j32-34324hkdf-432423dsf-3324fsd",
            "description" : "The system generated `id` of the quote used to generate the agreement.",
            "readOnly" : true
          },
          "total_value" : {
            "type" : "integer",
            "example" : 10000,
            "description" : "The the total value of the agreement.",
            "readOnly" : true
          },
          "total_tax" : {
            "type" : "integer",
            "example" : 500,
            "description" : "The total value of the tax for the agreement.",
            "readOnly" : true
          },
          "total_paid" : {
            "type" : "integer",
            "example" : 4000,
            "description" : "The total amount which has been paid for the agreement.",
            "readOnly" : true
          },
          "short_id" : {
            "type" : "string",
            "example" : "R4E7X6ATG",
            "description" : "A human readable short identifier which is displayed on agreements which are viewed using our system generated link.",
            "readOnly" : true
          }
        }
      } ]
    },
    "PutQuote" : {
      "properties" : {
        "plan_id" : {
          "type" : "string",
          "example" : "11a38b9a-b3da-360f-9353-a5a72551426",
          "description" : "The automatically generated id for a specific plan.",
          "maxLength" : 64
        },
        "terms_file" : {
          "type" : "string",
          "example" : "http://app.bizpay.co.uk/seller/terms.pdf",
          "description" : "This is a URL which links to a PDF file that contains sale terms and conditions.",
          "x-nullable" : true
        },
        "currency" : {
          "type" : "string",
          "example" : "USD",
          "description" : "This is where you can specify currency. Uses ISO 3 character currency codes. Currencies can not be mixed together so all the products entered within the quote products_array must be priced in the same currency. <a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"blank\">Full list of currencies here.</a>",
          "minLength" : 3,
          "maxLength" : 3
        },
        "start_date" : {
          "type" : "string",
          "example" : "2018-05-31T08:26:31+00:00",
          "description" : "This field allows you to specify when the schedule of payments should begin. If not specified the creation date and time will be the start date. The required format is `yyyy-MM-ddTHH:mm:ss�hh:mm` the T is required between the date and time and the latter � xx:xx allows for timezone changes. <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"blank\">Full explanation here</a>.",
          "default" : "now"
        },
        "validity" : {
          "type" : "integer",
          "example" : 90,
          "description" : "This allows you to specify a validity period. This must be specified in minutes. 1 hour = 60 minutes, 1 day = 1440 minutes, 1 week = 10,080 minutes, etc. This will be applied from the start date."
        },
        "max_payment_date" : {
          "type" : "string",
          "example" : "2018-05-31T08:26:31+00:00",
          "description" : "'This field allows you to specify a date by which you want to have received all the payments. Specifying this date excludes all payment options which have payment dates beyond the date you specify. For example if you wanted to offer a monthly payment plan to a customer but wanted to make sure that all the payments were received 2 weeks before you delivered the last part of the order, you can specify that date as the maximum_payment_date. We will then ensure that amounts are calculated to match this constraint. The required format is `yyyy-MM-ddTHH:mm:ss�hh:mm` the T is required between the date and time and the latter � xx:xx allows for timezone changes. <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"blank\">Full explanation here</a>.'"
        },
        "period" : {
          "type" : "string",
          "example" : "monthly",
          "description" : "The time period which was used by the plan to generate pricing options.",
          "readOnly" : true
        },
        "customer_id" : {
          "type" : "string",
          "example" : "3329861723HAoq0qV",
          "description" : "The automatically assigned `ID` representing a customer.",
          "minLength" : 32,
          "maxLength" : 64
        },
        "cancelable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "This specifies whether an agreement created from based on the pricing model defined can be cancelled or not. If you select yes and allow cancellation, you need to set two additional parameters. `cancel_type`, which allows you to define what should happen to payments already paid and `cancel_time` which specifies the number of minutes within which the cancellation event is possible."
        },
        "cancel_type" : {
          "type" : "string",
          "example" : "refund_all",
          "description" : "This contols what happens in the event of cancellation and can be one of 3 options, `refund_all` which means refund everything which was paid. `refund_products` which means refund according to the refund amount specified in the product array. `non_refundable` which means do not refund anything.",
          "enum" : [ "refund_all", "refund_products", "non_refundable" ]
        },
        "cancel_time" : {
          "type" : "integer",
          "example" : 90,
          "description" : "Specify in minutes the amount of time within which cancellation can be triggered. This must be specified in minutes. 1 hour = 60 minutes, 1 day = 1440 minutes, 1 week = 10,080 minutes, etc. This will be applied from the start date."
        },
        "refundable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "This specifies whether an agreement created from this pricing model can be refunded or not. If you select yes and allow refunds you can select two additional parameters. `refund_type`, which allows you to define what should happen to payments already paid and `refund_time` which specifies the number of minutes within which a refund is possible."
        },
        "refund_type" : {
          "type" : "string",
          "example" : "refund_all",
          "description" : "This contols what happens in the event of refund and can be one of 3 options, `refund_all` which means refund everything which was paid. `refund_products` which means refund according to the refund field stored in the product array. `non_refundable` which means do not automatically refund anything. Refunds can be triggered manually within the administration console and a manual refund would override these values.",
          "enum" : [ "refund_all", "refund_products", "non_refundable" ]
        },
        "refund_time" : {
          "type" : "integer",
          "example" : 90,
          "description" : "Specify in minutes the amount of time within which a refund can be triggered. This must be specified in minutes. 1 hour = 60 minutes, 1 day = 1440 minutes, 1 week = 10,080 minutes, etc. This will be applied from the start date."
        },
        "require_method" : {
          "type" : "boolean",
          "example" : true,
          "description" : "This sets whether an agreement created from this quote requires at least one valid payment method to be stored against the customer in order to be created. If this is set to `true` and there is no payment token attached to the customer, agreement creation will fail. The default is `false` which means agreements can be created and payment methods added later.",
          "default" : false
        },
        "recalculate_due_dates" : {
          "type" : "boolean",
          "example" : true,
          "description" : "When an agreement is created this field defines whether the due dates for payments should be created based on the due dates contained within a quote (set to false), or it whether they should be recalculated to start from the moment the agreement is created (set to true). This field is required."
        },
        "charge_automatically" : {
          "type" : "boolean",
          "example" : true,
          "description" : "When an agreement is created from a quote, this field sets whether the bizpay charging system should be used to charge the customer via their default payment method. Set this to `false` to turn off the automatic charging part of bippay and use a seperate system to make charges."
        },
        "additional" : {
          "$ref" : "#/definitions/Additional"
        },
        "products" : {
          "$ref" : "#/definitions/PutAgreementProduct"
        }
      },
      "example" : {
        "plan_id" : "11f7629b-a4ff-4bb6-a8e1-07ad275b11a1",
        "terms_file" : "http://app.bizpay.co.uk/seller/terms.pdf",
        "currency" : "USD",
        "start_date" : "2018-05-31T14:43:59+00:00",
        "validity" : 7200,
        "max_payment_date" : "2018-09-30T14:43:59+00:00",
        "period" : "weekly",
        "customer_id" : "99997a3a-5f36-4baf-964e-d78e2bcc122f",
        "cancelable" : false,
        "cancel_type" : "nonrefundable",
        "cancel_time" : 0,
        "refundable" : false,
        "refund_type" : "nonrefundable",
        "refund_time" : 0,
        "require_method" : false,
        "recalculate_due_dates" : false,
        "charge_automatically" : false,
        "additional" : {
          "special_id" : "y78gh7hg738gheuih4",
          "remaining_inventory" : 3,
          "limited_edition" : true,
          "etc" : "Etc, etc, etc."
        },
        "products" : [ {
          "quantity" : 1,
          "description" : "Some Amazing Product",
          "price" : "100000",
          "tax" : "0",
          "first_payment" : "0",
          "refund_price" : "0",
          "refund_tax" : "0",
          "additional" : {
            "special_id" : "y78gh7hg738gheuih4",
            "remaining_inventory" : 3,
            "limited_edition" : true,
            "etc" : "Etc, etc, etc."
          }
        }, {
          "quantity" : 1,
          "description" : "Some Amazing Product",
          "price" : "100000",
          "tax" : "0",
          "first_payment" : "0",
          "refund_price" : "0",
          "refund_tax" : "0",
          "additional" : {
            "special_id" : "y78gh7hg738gheuih4",
            "remaining_inventory" : 3,
            "limited_edition" : true,
            "etc" : "Etc, etc, etc."
          }
        } ]
      }
    },
    "PostQuote" : {
      "required" : [ "cancel_time", "cancel_type", "cancelable", "charge_automatically", "first_payment", "plan_id", "products", "recalculate_due_dates", "refund_time", "refund_type", "refundable", "validity" ],
      "properties" : {
        "plan_id" : {
          "type" : "string",
          "example" : "11a38b9a-b3da-360f-9353-a5a72551426",
          "description" : "The automatically generated id for a specific plan. All the pricing options which will be offered in this quote together with the currency options are controlled by the plan.",
          "maxLength" : 64
        },
        "start_date" : {
          "type" : "string",
          "example" : "2018-05-31T08:26:31+00:00",
          "description" : "This field allows you to specify when the schedule of payments should begin. If not specified the creation date and time will be the start date. The required format is `yyyy-MM-ddTHH:mm:ss�hh:mm` the T is required between the date and time and the latter � xx:xx allows for timezone changes. <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"blank\">Full explanation here</a>.",
          "default" : "now"
        },
        "validity" : {
          "type" : "integer",
          "example" : 90,
          "description" : "This allows you to specify a validity period. This must be specified in minutes. 1 hour = 60 minutes, 1 day = 1440 minutes, 1 week = 10,080 minutes, etc. This will be applied from the agreement start date."
        },
        "max_payment_date" : {
          "type" : "string",
          "example" : "2018-05-31T08:26:31+00:00",
          "description" : "'This field allows you to specify a date by which you want to have received all the payments. Specifying this date excludes all payment options which have payment dates beyond the date you specify. For example if you wanted to offer a monthly payment plan to a customer but wanted to make sure that all the payments were received 2 weeks before you delivered the last part of the order, you can specify that date as the maximum_payment_date. We will then ensure that amounts are calculated to match this constraint. The required format is `yyyy-MM-ddTHH:mm:ss�hh:mm` the T is required between the date and time and the latter � xx:xx allows for timezone changes. <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"blank\">Full explanation here</a>.'"
        },
        "period" : {
          "type" : "string",
          "example" : "monthly",
          "description" : "The time period which was used by the plan to generate pricing options.",
          "readOnly" : true
        },
        "customer_id" : {
          "type" : "string",
          "example" : "3329861723HAoq0qV",
          "description" : "The automatically assigned `ID` representing a customer.",
          "minLength" : 32,
          "maxLength" : 64
        },
        "cancelable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "This specifies whether an agreement created from based on the pricing model defined can be cancelled or not. If you select yes and allow cancellation, you need to set two additional parameters. `cancel_type`, which allows you to define what should happen to payments already paid and `cancel_time` which specifies the number of minutes within which the cancellation event is possible."
        },
        "cancel_type" : {
          "type" : "string",
          "example" : "refund_all",
          "description" : "This contols what happens in the event of cancellation and can be one of 3 options, `refund_all` which means refund everything which was paid. `refund_products` which means refund according to the refund amount specified in the product array. `non_refundable` which means do not refund anything.",
          "enum" : [ "refund_all", "refund_products", "non_refundable" ]
        },
        "cancel_time" : {
          "type" : "integer",
          "example" : 90,
          "description" : "Specify in minutes the amount of time within which cancellation can be triggered. This must be specified in minutes. 1 hour = 60 minutes, 1 day = 1440 minutes, 1 week = 10,080 minutes, etc."
        },
        "refundable" : {
          "type" : "boolean",
          "example" : false,
          "description" : "This specifies whether an agreement created from this pricing model can be refunded or not. If you select yes and allow refunds you can select two additional parameters. `refund_type`, which allows you to define what should happen to payments already paid and `refund_time` which specifies the number of minutes within which a refund is possible."
        },
        "refund_type" : {
          "type" : "string",
          "example" : "refund_all",
          "description" : "This contols what happens in the event of refund and can be one of 3 options, `refund_all` which means refund everything which was paid. `refund_products` which means refund according to the refund field stored in the product array. `non_refundable` which means do not automatically refund anything. Refunds can be triggered manually within the administration console and a manual refund would override these values.",
          "enum" : [ "refund_all", "refund_products", "non_refundable" ]
        },
        "refund_time" : {
          "type" : "integer",
          "example" : 90,
          "description" : "Specify in minutes the amount of time within which a refund can be triggered. This must be specified in minutes. 1 hour = 60 minutes, 1 day = 1440 minutes, 1 week = 10,080 minutes, etc."
        },
        "require_method" : {
          "type" : "boolean",
          "example" : true,
          "description" : "This sets whether an agreement created from this quote requires at least one valid payment method to be stored against the customer in order to be created. If this is set to `true` and there is no payment token attached to the customer, agreement creation will fail. The default is `false` which means agreements can be created and payment methods added later.",
          "default" : false
        },
        "recalculate_due_dates" : {
          "type" : "boolean",
          "example" : true,
          "description" : "When an agreement is created this field defines whether the due dates for payments should be created based on the due dates contained within a quote (set to false), or it whether they should be recalculated to start from the moment the agreement is created (set to true). This field is required."
        },
        "charge_automatically" : {
          "type" : "boolean",
          "example" : true,
          "description" : "When an agreement is created from a quote, this field sets whether the bizpay charging system should be used to charge the customer via their default payment method. Set this to `false` to turn off the automatic charging part of bippay and use a seperate system to make charges."
        },
        "first_payment" : {
          "type" : "boolean",
          "example" : true,
          "description" : "This sets whether the first payment should be taken successfully before an agreement is created. If set to `true` agreement creation will fail if the payment is not made successfully. The default is `false` which means that an agreement can be created even if the first payment method fails and new payment methods can be added later to capture the failed payment.",
          "default" : false
        },
        "logo" : {
          "type" : "string",
          "example" : "http://company.com/logo.png",
          "description" : "This is a link to the logo which will be shown the link form if it is generated."
        },
        "additional" : {
          "$ref" : "#/definitions/Additional"
        },
        "seller" : {
          "$ref" : "#/definitions/Seller"
        },
        "products" : {
          "$ref" : "#/definitions/AgreementProduct"
        }
      },
      "example" : {
        "plan_id" : "11f7629b-a4ff-4bb6-a8e1-07ad275b11a1",
        "start_date" : "2018-05-31T14:43:59+00:00",
        "validity" : 7200,
        "max_payment_date" : "2018-09-30T14:43:59+00:00",
        "period" : "weekly",
        "customer_id" : "99997a3a-5f36-4baf-964e-d78e2bcc122f",
        "cancelable" : false,
        "cancel_type" : "nonrefundable",
        "cancel_time" : 0,
        "refundable" : false,
        "refund_type" : "nonrefundable",
        "refund_time" : 0,
        "require_method" : false,
        "recalculate_due_dates" : false,
        "charge_automatically" : false,
        "first_payment" : true,
        "logo" : "http://company.com/logo.png",
        "additional" : {
          "special_id" : "y78gh7hg738gheuih4",
          "remaining_inventory" : 3,
          "limited_edition" : true,
          "etc" : "Etc, etc, etc."
        },
        "seller" : {
          "name" : "Acme llc",
          "email" : "customerservice@acme.co.uk",
          "website" : "www.acme.com",
          "phone" : "0800 090 090",
          "additional" : {
            "special_id" : "y78gh7hg738gheuih437",
            "limited_edition" : true,
            "etc" : "Etc, etc, etc."
          }
        },
        "products" : [ {
          "quantity" : 1,
          "description" : "An Amazing Product",
          "price" : "100000",
          "tax" : "0",
          "first_payment" : "0",
          "refund_price" : "0",
          "refund_tax" : "0",
          "additional" : {
            "special_id" : "y78gh7hg738gheuih4",
            "remaining_inventory" : 3,
            "limited_edition" : true,
            "etc" : "Etc, etc, etc."
          }
        }, {
          "quantity" : 1,
          "description" : "Another Amazing Product",
          "price" : "100000",
          "tax" : "0",
          "first_payment" : "0",
          "refund_price" : "0",
          "refund_tax" : "0",
          "additional" : {
            "special_id" : "y78gh7hg738gheuih4",
            "remaining_inventory" : 3,
            "limited_edition" : true,
            "etc" : "Etc, etc, etc."
          }
        } ]
      }
    },
    "GetQuotes" : {
      "properties" : {
        "quotes" : {
          "type" : "array",
          "description" : "A list of quotes within your bizpay account.",
          "items" : {
            "$ref" : "#/definitions/GetQuote"
          }
        },
        "links" : {
          "type" : "array",
          "description" : "A list of all the navigation links for the response.",
          "items" : {
            "$ref" : "#/definitions/pageLinks"
          }
        },
        "meta" : {
          "type" : "array",
          "description" : "A list of the response meta data.",
          "items" : {
            "$ref" : "#/definitions/pageMeta"
          }
        }
      },
      "example" : {
        "data" : [ {
          "id" : "8c190ec5-567a-4d90-823e-67150c35132d",
          "plan_name" : "Plan 1",
          "customer_id" : "87c190ec5-567a-4d90-823e-67150c35132d",
          "start_date" : "2020-05-20T10:40:20+00:00",
          "plan_id" : "555a1bd0-2f43-4370-9a17-ea926a99e6be",
          "currency" : "USD",
          "validity" : 5173,
          "link" : "https://links.bizpay.co.uk/dsfhdfh3238ry7el"
        }, {
          "id" : "8c190ec5-567a-4d90-823e-67150c35132d",
          "plan_name" : "Plan 1",
          "customer_id" : "87c190ec5-567a-4d90-823e-67150c35132d",
          "start_date" : "2020-05-20T10:40:20+00:00",
          "plan_id" : "555a1bd0-2f43-4370-9a17-ea926a99e6be",
          "currency" : "USD",
          "validity" : 5173,
          "link" : "https://links.bizpay.co.uk/dsfhdfh3238ry7el"
        }, {
          "id" : "8c190ec5-567a-4d90-823e-67150c35132d",
          "plan_name" : "Plan 1",
          "customer_id" : "87c190ec5-567a-4d90-823e-67150c35132d",
          "start_date" : "2020-05-20T10:40:20+00:00",
          "plan_id" : "555a1bd0-2f43-4370-9a17-ea926a99e6be",
          "currency" : "USD",
          "validity" : 5173,
          "link" : "https://links.bizpay.co.uk/dsfhdfh3238ry7el"
        } ],
        "links" : {
          "first" : "https://api.bizpay.co.uk/api/v1.25/quotes?page=1",
          "last" : "https://api.bizpay.co.uk/api/v1.25/quotes?page=50",
          "next" : "https://api.bizpay.co.uk/api/v1.25/quotes?page=2"
        },
        "meta" : {
          "current_page" : 1,
          "from" : 1,
          "to" : 50,
          "last_page" : 50,
          "path" : "https://api.bizpay.co.uk/api/v1.25/quotes",
          "per_page" : 3,
          "total" : 500
        }
      }
    },
    "GetQuote" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "2123332-b3da-360f-9353-a5a725514269",
          "description" : "The automatically generated id for a specific quote.",
          "readOnly" : true,
          "maxLength" : 64
        },
        "plan_name" : {
          "type" : "string",
          "description" : "The name of the plan which has been used for the quote."
        },
        "customer_id" : {
          "type" : "string",
          "example" : "3329861723HAoq0qV",
          "description" : "The automatically assigned `ID` representing a customer which is linked to the quote.",
          "minLength" : 32,
          "maxLength" : 64
        },
        "start_date" : {
          "type" : "string",
          "example" : "2018-05-31T08:26:31+00:00",
          "description" : "This field allows you to specify when the schedule of payments generated by the quote should begin. If not specified the quote creation date and time will be the start date. The required format is `yyyy-MM-ddTHH:mm:ss�hh:mm` the T is required between the date and time and the latter � xx:xx allows for timezone changes. <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"blank\">Full explanation here</a>."
        },
        "plan_id" : {
          "type" : "string",
          "example" : "11a38b9a-b3da-360f-9353-a5a72551426",
          "description" : "The automatically generated id for a specific plan.",
          "maxLength" : 64
        },
        "terms_file" : {
          "type" : "string",
          "example" : "http://app.bizpay.co.uk/seller/terms.pdf",
          "description" : "This is a URL which links to a PDF file that contains sale terms and conditions.",
          "readOnly" : true,
          "x-nullable" : true
        },
        "currency" : {
          "type" : "string",
          "example" : "USD",
          "description" : "'This is where you can specify the currency which the quote is in. Currencies can not be mixed together so all the products entered within the quote products_array must be priced in the same currency. <a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"blank\">Full list of currencies here.</a>'",
          "minLength" : 3,
          "maxLength" : 3
        },
        "validity" : {
          "type" : "integer",
          "example" : 90,
          "description" : "This allows you to specify how long this quote should be valid for. This must be specified in minutes. 1 hour = 60 minutes, 1 day = 1440 minutes, 1 week = 10,080 minutes, etc. This will be applied from the start date."
        },
        "link" : {
          "type" : "string",
          "example" : "https://links.bizpay.co.uk/124343524323nljdfhgg23hj",
          "description" : "A http:// link which can be used to preview this object using default interfaces which are linked to your account.",
          "readOnly" : true
        }
      }
    },
    "QuotePricing" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "5bad6aef-77bc-4a88-80c8-a23bb2005dbc",
          "description" : "Auto generated ID for the group which represents a specific pricing option.",
          "readOnly" : true
        },
        "plan" : {
          "type" : "array",
          "description" : "This array lists out the fields which relate to the plan. Contained are any charges which apply if the pricing option is selected, together with elements which can be presented to a buyer through a custom UI.",
          "items" : {
            "$ref" : "#/definitions/QuotePricing_plan"
          }
        },
        "quote" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/QuotePricing_quote"
          }
        },
        "payments" : {
          "type" : "array",
          "description" : "This array represents a list of all the payments which will be due under the quote.",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/Payments"
          }
        }
      }
    },
    "Payments" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "92447a3a-5f36-4baf-964e-d78e2bcc122f",
          "description" : "The `id` which is automatically assigned to a payment within a quote.",
          "readOnly" : true
        },
        "amount" : {
          "type" : "integer",
          "example" : 100,
          "description" : "The amount in currency of the charge with no decimalisation. For example, USD 116 would represent $1.16.",
          "readOnly" : true
        },
        "due_date" : {
          "type" : "string",
          "example" : "2020-12-01T12:00+02:00",
          "description" : "'This field allows you to specify a date when payment will be due. The required format is `yyyy-MM-ddTHH:mm:ss�hh:mm` the T is required between the date and time and the latter � xx:xx allows for timezone changes. <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"blank\">Full explanation here</a>.'",
          "readOnly" : true
        }
      },
      "example" : {
        "due_date" : "2018-05-31T14:43:59+00:00",
        "amount" : 28000
      }
    },
    "Additional" : {
      "properties" : {
        "AnyFieldName" : {
          "example" : "Custom data to be stored goes here.",
          "description" : "Can be any value, including null."
        },
        "AnotherFieldName" : {
          "example" : "More custom data to store.",
          "description" : "Can be any value, including null."
        },
        "etc" : {
          "example" : "Etc, etc, etc.",
          "description" : "Another example of a custom field which can store any data."
        }
      },
      "description" : "This JSON array allows for additional fields to be added to an object. Field names and data types are flexible."
    },
    "Notifications" : {
      "properties" : {
        "created" : {
          "type" : "string",
          "example" : "anemail@company.com|234324234-23423423-234324144-13423423|anotheremail@company.com",
          "description" : "Notifications which should be sent when an agreement is created. <br><br>Example: <br> cancelled: 'ben@company.com|24324324-234324-2432342-24324|anotheremail@company.com'.<br><br> This would send notifications to the user specified as well as the two email addresses. All the notification fields work in this way."
        },
        "no_method" : {
          "type" : "string",
          "example" : "anemail@company.com|234324234-23423423-234324144-13423423|anotheremail@company.com",
          "description" : "Notifications which should be sent when a customer specified within an agreement has no payment methods linked to their account."
        },
        "payment_failed" : {
          "type" : "string",
          "example" : "anemail@company.com|234324234-23423423-234324144-13423423|anotheremail@company.com",
          "description" : "Notifications which should be sent when payment for a charge within an agreement fails."
        },
        "payment_due" : {
          "type" : "string",
          "example" : "anemail@company.com|234324234-23423423-234324144-13423423|anotheremail@company.com",
          "description" : "Notifications which should be sent when a payment is due."
        },
        "payment_recieved" : {
          "type" : "string",
          "example" : "anemail@company.com|234324234-23423423-234324144-13423423|anotheremail@company.com",
          "description" : "Notifications which should be sent when a payment is received."
        },
        "paid" : {
          "type" : "string",
          "example" : "anemail@company.com|234324234-23423423-234324144-13423423|anotheremail@company.com",
          "description" : "Notifications which should be sent when an agreement is fully paid."
        },
        "cancelled" : {
          "type" : "string",
          "example" : "anemail@company.com|234324234-23423423-234324144-13423423|anotheremail@company.com",
          "description" : "Notifications which should be sent when an agreement is cancelled."
        },
        "refunded" : {
          "type" : "string",
          "example" : "anemail@company.com|234324234-23423423-234324144-13423423|anotheremail@company.com",
          "description" : "Notifications which should be sent when an agreement is refunded."
        },
        "changed" : {
          "type" : "string",
          "example" : "anemail@company.com|234324234-23423423-234324144-13423423|anotheremail@company.com",
          "description" : "Notifications which should be sent when an agreement is changed."
        }
      }
    },
    "PaymentMethods" : {
      "discriminator" : "method_type",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "12321hk3-123xbn-21312ua3-123jb123",
          "description" : "A unique ID which represents the payment method."
        },
        "label" : {
          "type" : "string",
          "example" : "Pay by credit card",
          "description" : "A human readable name which is presented to the user to select this method."
        },
        "live" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether this payment method is live or test"
        },
        "show" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether the method should be shown in a list."
        },
        "reduction" : {
          "type" : "integer",
          "example" : 100,
          "description" : "Reduction allows for a discount to the total price to be applied to any payments being made with this method. This amount is specified as an integer, for currencies decimalisation will be added by the bizpay system. For percentages two decimal places will be added to values."
        },
        "reduction_operator" : {
          "type" : "string",
          "example" : "currency",
          "description" : "The type of reduction in price. `currency` or `percentage`. If currency is specified the discount will be a fixed amount of currency which is taken from the price for each transaction, regardless of the value. If percentage is specified the reudction will be the specified percentage of the total price.",
          "enum" : [ "percentage", "currency" ]
        },
        "order" : {
          "type" : "integer",
          "example" : 1,
          "description" : "The priority order which the payment methods should be offered."
        },
        "gateway_id" : {
          "type" : "string",
          "example" : "stripe",
          "description" : "The unique id of this payment method."
        },
        "gateway_name" : {
          "type" : "string",
          "example" : "stripe",
          "description" : "The readable name which represents the gateway."
        },
        "gateway_method" : {
          "type" : "string",
          "example" : "card",
          "description" : "The payment gateway type for example, card, bank_account, etc.",
          "enum" : [ "card", "bank_account" ]
        }
      }
    },
    "card" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PaymentMethods"
      }, {
        "type" : "object",
        "properties" : {
          "details" : {
            "type" : "array",
            "description" : "Specific fields which relate to the selected gateway name and type.",
            "items" : {
              "$ref" : "#/definitions/card_details"
            }
          }
        }
      } ]
    },
    "bank_account" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PaymentMethods"
      }, {
        "type" : "object",
        "properties" : {
          "details" : {
            "type" : "array",
            "description" : "Specific fields which relate to the selected gateway name and type.",
            "items" : {
              "$ref" : "#/definitions/bank_account_details"
            }
          }
        }
      } ]
    },
    "ViewPaymentMethods" : {
      "required" : [ "default", "gateway", "id", "label" ],
      "discriminator" : "gateway",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The unique identifier of the gateway which will be used with the charge method."
        },
        "gateway" : {
          "type" : "string",
          "description" : "Gateway allows you to specify the gateway you wish to use to store the payment method. Changing the gateway type, changes the fields required in the details array.",
          "enum" : [ "stripe", "adyen", "worldpay", "cash" ]
        },
        "label" : {
          "type" : "string",
          "description" : "This specifies the label which can be used by the customer to identify a payment method."
        },
        "default" : {
          "type" : "boolean",
          "description" : "This specifies whether this payment method is the default for this customer. Setting this to yes will set all other tokens and payment methods to No as there can only be one default payment method per customer. If there is only one payment method, this option will be Yes, even if No is specified. Seting a new payment method to default will replace the current default method."
        },
        "show" : {
          "type" : "boolean",
          "example" : false,
          "description" : "This specifies whether the charge method should show in a list of saved payment methods.",
          "default" : true
        },
        "method_type" : {
          "type" : "string",
          "description" : "The type of payment method which is being added. Available options are `card` which represents a credit card, and `cash` which represents cash.",
          "enum" : [ "card", "cash" ]
        }
      },
      "example" : {
        "gateway" : "stripe",
        "label" : "Mastercard ending 3443",
        "default" : true,
        "show" : false,
        "method_type" : "card",
        "details" : {
          "token" : "2374hfuy732-23f23uhsd-kjdfh327-jf372y"
        }
      }
    },
    "Product" : {
      "required" : [ "description", "first_payment", "pre_tax_price", "pre_tax_refund", "quantity", "tax_price", "tax_refund" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "7c190ec5-567a-4d90-823e-67150c35132d",
          "description" : "An automatically generated `ID` for products.",
          "readOnly" : true
        },
        "quantity" : {
          "type" : "integer",
          "example" : 2,
          "description" : "The product quantity defines how many of this product the entry in the `product_array` represents.",
          "minimum" : 1
        },
        "description" : {
          "type" : "string",
          "example" : "Flight from new york to paris - Business class",
          "description" : "The product description is a summary of the product which has been bought. For example, 'Flight from New York to Paris - Business class.'",
          "maxLength" : 1000
        },
        "pre_tax_price" : {
          "type" : "integer",
          "example" : 1000,
          "description" : "This is the total price of the product not inlcuding any taxes (these should be specified seperately in `tax_price`). There should be no decimalisation, for example, USD 116 would represent $1.16. <br> This price should represent the per unit price per product item as quantity will be used to multiply this by the number of products specified."
        },
        "tax_price" : {
          "type" : "integer",
          "example" : 300,
          "description" : "This is the tax which needs to be applied to this product per unit. There should be no decimalisation, for example, USD 116 would represent $1.16."
        },
        "total_price" : {
          "type" : "integer",
          "example" : 1300,
          "description" : "This field is system calculated by adding the `pre_tax_price` and the `tax_price`.",
          "readOnly" : true
        },
        "first_payment" : {
          "type" : "integer",
          "example" : 400,
          "description" : "This field allows you to set an amount (deposit) which needs to be paid in the first payment for this product. This number should not have decimalisation. For example, USD 116 would represent $1.16."
        },
        "pre_tax_refund" : {
          "type" : "integer",
          "example" : 500,
          "description" : "This allows you to set the amount which can be refunded from `pre_tax_price` for this product if a refund request is made. This number should not have decimalisation. For example, USD 116 would represent $1.16."
        },
        "tax_refund" : {
          "type" : "integer",
          "example" : 50,
          "description" : "This allows you to set the amount which can be refunded from `tax_price` for this product if a refund request is made. This number should not have decimalisation. For example, USD 116 would represent $1.16."
        },
        "total_refund" : {
          "type" : "integer",
          "description" : "This field is system calculated by adding the `pre_tax_refund` and `tax_refund`.",
          "readOnly" : true
        },
        "additional" : {
          "$ref" : "#/definitions/Additional"
        }
      }
    },
    "PutAgreementProduct" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "7c190ec5-567a-4d90-823e-67150c35132d",
          "description" : "An automatically generated `ID` for products.",
          "readOnly" : true
        },
        "quantity" : {
          "type" : "integer",
          "example" : 2,
          "description" : "The product quantity defines how many of this product the entry in the `product_array` presents.",
          "minimum" : 1
        },
        "description" : {
          "type" : "string",
          "example" : "Flight from new york to paris - Business class",
          "description" : "The product description is a summary of the product which has been bought. For example, 'Flight from New York to Paris - Business class.'",
          "maxLength" : 1000
        },
        "pre_tax_price" : {
          "type" : "integer",
          "example" : 1000,
          "description" : "This is the total price of the product less any taxes (these should be specified seperately in `tax_price`). There should be no decimalisation, for example, USD 116 would represent $1.16. <br> This price should represent the per unit price per product item as quantity will be used to multiply this by the number of products specified."
        },
        "tax_price" : {
          "type" : "integer",
          "example" : 300,
          "description" : "This is the tax which needs to be applied to this product per unit. There should be no decimalisation, for example, USD 116 would represent $1.16."
        },
        "total_price" : {
          "type" : "integer",
          "example" : 1300,
          "description" : "This field is system calculated by adding the `pre_tax_price` and the `tax_price`.",
          "readOnly" : true
        },
        "first_payment" : {
          "type" : "integer",
          "example" : 400,
          "description" : "This field allows you to set an amount (deposit) which needs to be paid in the first payment for this product. This number should not have decimalisation. For example, USD 116 would represent $1.16."
        },
        "pre_tax_refund" : {
          "type" : "integer",
          "example" : 500,
          "description" : "This allows you to set the amount which can be refunded from `pre_tax_price` for this product if a refund request is made. This number should not have decimalisation. For example, USD 116 would represent $1.16."
        },
        "tax_refund" : {
          "type" : "integer",
          "example" : 50,
          "description" : "This allows you to set the amount which can be refunded from `tax_price` for this product if a refund request is made. This number should not have decimalisation. For example, USD 116 would represent $1.16."
        },
        "total_refund" : {
          "type" : "integer",
          "description" : "This field is system calculated by adding the `pre_tax_refund` and `tax_refund`.",
          "readOnly" : true
        },
        "additional" : {
          "$ref" : "#/definitions/Additional"
        }
      },
      "description" : "This allows you to specify the products which are being sold and represents the basket contents. The required fields are explained in detail below. You are free to add additional fields to products using the additonal array and these will be returned with the product data by all our endpoints."
    },
    "AgreementProduct" : {
      "required" : [ "description", "first_payment", "pre_tax_price", "pre_tax_refund", "quantity", "tax_price", "tax_refund" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "7c190ec5-567a-4d90-823e-67150c35132d",
          "description" : "An automatically generated `ID` for products.",
          "readOnly" : true
        },
        "quantity" : {
          "type" : "integer",
          "example" : 2,
          "description" : "The product quantity defines how many of this product this entry in the `product_array` presents.",
          "minimum" : 1
        },
        "description" : {
          "type" : "string",
          "example" : "Flight from new york to paris - Business class",
          "description" : "The product description is a summary of the product which has been bought. For example, 'Flight from New York to Paris - Business class.'",
          "maxLength" : 1000
        },
        "pre_tax_price" : {
          "type" : "integer",
          "example" : 1000,
          "description" : "This is the total price of the product less any taxes (these should be specified seperately in `tax_price`). There should be no decimalisation, for example, USD 116 would represent $1.16. <br> This price should represent the per unit price per product item as quantity will be used to multiply this by the number of products specified."
        },
        "tax_price" : {
          "type" : "integer",
          "example" : 300,
          "description" : "This is the tax which needs to be applied to this product per unit. There should be no decimalisation, for example, USD 116 would represent $1.16."
        },
        "total_price" : {
          "type" : "integer",
          "example" : 1300,
          "description" : "This field is system calculated by adding the `pre_tax_price` and the `tax_price`.",
          "readOnly" : true
        },
        "first_payment" : {
          "type" : "integer",
          "example" : 400,
          "description" : "This field allows you to set an amount (deposit) which needs to be paid in the first payment for this product. This number should not have decimalisation. For example, USD 116 would represent $1.16."
        },
        "pre_tax_refund" : {
          "type" : "integer",
          "example" : 500,
          "description" : "This allows you to set the amount which can be refunded from `pre_tax_price` for this product if a refund request is made. This number should not have decimalisation. For example, USD 116 would represent $1.16."
        },
        "tax_refund" : {
          "type" : "integer",
          "example" : 50,
          "description" : "This allows you to set the amount which can be refunded from `tax_price` for this product if a refund request is made. This number should not have decimalisation. For example, USD 116 would represent $1.16."
        },
        "total_refund" : {
          "type" : "integer",
          "description" : "This field is system calculated by adding the `pre_tax_refund` and `tax_refund`.",
          "readOnly" : true
        },
        "additional" : {
          "$ref" : "#/definitions/Additional"
        }
      },
      "description" : "This allows you to specify the products which are being sold and represents the basket contents. The required fields are explained in detail below. You are free to add additional fields to products using the additonal array and these will be returned with the product data by all our endpoints."
    },
    "GetAgreements" : {
      "properties" : {
        "agreements" : {
          "type" : "array",
          "description" : "A list of agreements within your bizpay account.",
          "items" : {
            "$ref" : "#/definitions/Agreements"
          }
        },
        "links" : {
          "type" : "array",
          "description" : "A list of all the navigation links for the response.",
          "items" : {
            "$ref" : "#/definitions/pageLinks"
          }
        },
        "meta" : {
          "type" : "array",
          "description" : "A list of the response meta data.",
          "items" : {
            "$ref" : "#/definitions/pageMeta"
          }
        }
      },
      "example" : {
        "data" : [ {
          "id" : "2123332-b3da-360f-9353-a5a725514269",
          "customer_id" : "3329861723HAoq0qV",
          "customer_name" : "Adam Smith",
          "plan_id" : "11a38b9a-b3da-360f-9353-a5a72551426",
          "currency" : "USD",
          "total_value" : 90,
          "total_tax" : 90,
          "total_paid" : 90,
          "status" : "ok",
          "creation_date" : "2018-05-31T08:26:31+00:00",
          "additional" : {
            "special_id" : "y78gh7hg738gheuih43",
            "something" : 3,
            "limited_edition" : true,
            "etc" : "Etc, etc, etc."
          }
        }, {
          "id" : "2123332-b3da-360f-9353-a5a725514269",
          "customer_id" : "3329861723HAoq0qV",
          "customer_name" : "Adam Smith",
          "plan_id" : "11a38b9a-b3da-360f-9353-a5a72551426",
          "currency" : "USD",
          "total_value" : 90,
          "total_tax" : 90,
          "total_paid" : 90,
          "status" : "ok",
          "creation_date" : "2018-05-31T08:26:31+00:00",
          "additional" : {
            "special_id" : "y78gh7hg738gheuih43",
            "something" : 3,
            "limited_edition" : true,
            "etc" : "Etc, etc, etc."
          }
        }, {
          "id" : "2123332-b3da-360f-9353-a5a725514269",
          "customer_id" : "3329861723HAoq0qV",
          "customer_name" : "Adam Smith",
          "plan_id" : "11a38b9a-b3da-360f-9353-a5a72551426",
          "currency" : "USD",
          "total_value" : 90,
          "total_tax" : 90,
          "total_paid" : 90,
          "status" : "ok",
          "creation_date" : "2018-05-31T08:26:31+00:00",
          "additional" : {
            "special_id" : "y78gh7hg738gheuih43",
            "something" : 3,
            "limited_edition" : true,
            "etc" : "Etc, etc, etc."
          }
        } ],
        "links" : {
          "first" : "https://api.bizpay.co.uk/api/v1.25/agreements?page=1",
          "last" : "https://api.bizpay.co.uk/api/v1.25/agreements?page=5",
          "next" : "https://api.bizpay.co.uk/api/v1.25/agreements?page=2"
        },
        "meta" : {
          "current_page" : 1,
          "from" : 1,
          "last_page" : 5,
          "path" : "https://api.bizpay.co.uk/api/v1.25/agreements",
          "per_page" : 10,
          "to" : 50
        }
      }
    },
    "Agreements" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "2123332-b3da-360f-9353-a5a725514269",
          "description" : "The automatically generated id for the agreement.",
          "readOnly" : true,
          "maxLength" : 64
        },
        "customer_id" : {
          "type" : "string",
          "example" : "3329861723HAoq0qV",
          "description" : "The automatically assigned `ID` representing a customer which is linked to the agreement.",
          "minLength" : 32,
          "maxLength" : 64
        },
        "customer_name" : {
          "type" : "string",
          "example" : "Adam Smith",
          "description" : "The full name of the customer"
        },
        "plan_id" : {
          "type" : "string",
          "example" : "11a38b9a-b3da-360f-9353-a5a72551426",
          "description" : "The automatically generated id for the plan used to create the agreement.",
          "maxLength" : 64
        },
        "terms_file" : {
          "type" : "string",
          "example" : "http://app.bizpay.co.uk/seller/terms.pdf",
          "description" : "This is a URL which links to a PDF file that contains sale terms and conditions.",
          "readOnly" : true,
          "x-nullable" : true
        },
        "currency" : {
          "type" : "string",
          "example" : "USD",
          "description" : "'This is where you can specify the currency which the quote is in. Currencies can not be mixed together so all the products entered within the quote products_array must be priced in the same currency. <a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"blank\">Full list of currencies here.</a>'",
          "minLength" : 3,
          "maxLength" : 3
        },
        "total_value" : {
          "type" : "integer",
          "example" : 90,
          "description" : "The total value in currency of the agreement. Note there is no decimalisation here. For example, USD 116 would represent $1.16."
        },
        "total_tax" : {
          "type" : "integer",
          "example" : 90,
          "description" : "The total value in currency of the tax for the agreement. Note there is no decimalisation here. For example, USD 116 would represent $1.16."
        },
        "total_paid" : {
          "type" : "integer",
          "example" : 90,
          "description" : "The total amount in currency paid under this agreement. Note there is no decimalisation here. For example, USD 116 would represent $1.16."
        },
        "status" : {
          "type" : "string",
          "example" : "ok",
          "description" : "The current status of the agreement. Options are ok, paid, cancelled, refunded, overdue. `ok` means the agreement is currently live and the required payments have been made so far. `paid` means the agreement has been fully paid, `cancelled` means the agreement has been cancelled, `refunded` means the agreement has been refunded. `overdue` means there are payments which were due but went unpaid and `void` means the agreement was voided.",
          "enum" : [ "ok", "paid", "cancelled", "refunded", "overdue", "void" ]
        },
        "creation_date" : {
          "type" : "string",
          "example" : "2018-05-31T08:26:31+00:00",
          "description" : "This field specifies when the specific agreement was created. The required format is `yyyy-MM-ddTHH:mm:ss�hh:mm` the T is required between the date and time and the latter � xx:xx allows for timezone changes. <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"blank\">Full explanation here</a>.",
          "readOnly" : true
        },
        "additional" : {
          "$ref" : "#/definitions/Additional"
        }
      }
    },
    "Seller" : {
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "Acme llc",
          "description" : "This is the name of the organisation which will be acting as the seller."
        },
        "email" : {
          "type" : "string",
          "example" : "customerservice@acme.co.uk",
          "description" : "This is the email address which customers should email if they have questions or issues."
        },
        "website" : {
          "type" : "string",
          "example" : "www.acme.com",
          "description" : "This should be the website where customers can go if they have quesitons."
        },
        "phone" : {
          "type" : "string",
          "example" : "0800 090 090",
          "description" : "This is the phone number which customers should call if they have any questions or issues."
        },
        "additional" : {
          "$ref" : "#/definitions/Additional"
        }
      },
      "description" : "The seller information which will be displayed.",
      "example" : {
        "name" : "Acme llc",
        "email" : "customerservice@acme.co.uk",
        "website" : "www.acme.com",
        "phone" : "0800 090 090",
        "additional" : {
          "special_id" : "y78gh7hg738gheuih437",
          "limited_edition" : true,
          "etc" : "Etc, etc, etc."
        }
      }
    },
    "GetAgreement" : {
      "properties" : {
        "customer" : {
          "type" : "array",
          "description" : "Information relating to the agreement customer.",
          "items" : {
            "$ref" : "#/definitions/AgreementCustomer"
          }
        },
        "seller" : {
          "type" : "array",
          "description" : "Information relating to the agreement seller.",
          "items" : {
            "$ref" : "#/definitions/Seller"
          }
        },
        "payment_methods" : {
          "type" : "array",
          "description" : "Information relating to the supported payment methods.",
          "items" : {
            "$ref" : "#/definitions/PaymentMethods"
          }
        },
        "agreement" : {
          "type" : "array",
          "description" : "Information relating to the agreement itself and products within the agreement.",
          "items" : {
            "$ref" : "#/definitions/Agreement"
          }
        },
        "charges" : {
          "type" : "array",
          "description" : "Information relating to agreement charges.",
          "items" : {
            "$ref" : "#/definitions/AgreementCharges"
          }
        },
        "notifications" : {
          "type" : "array",
          "description" : "Defines whether the bizpay system should send email notifications in the event of actions happening to agreements. Providing nothing for this array will result in no notifications being sent. All possible actions are specified. To request an email be sent, either a `customer_id` or email address is required. If multiple contacts need to be notified, specify multiple values delininated with the | character. The templates sent will be the bizpay defaults and will show the logo you have uploaded to our admin console - contact us to discuss personalising these.",
          "items" : {
            "$ref" : "#/definitions/Notifications"
          }
        }
      },
      "example" : {
        "data" : {
          "customer" : {
            "first_name" : "Kailee",
            "last_name" : "Jones",
            "middle_names" : { },
            "gender" : "other",
            "mobile_phone" : "(398) 497-5566",
            "telephone_number" : "(727) 787-0035 x164",
            "email" : "tbauch@hotmail.com",
            "job_title" : "Lathe Operator",
            "preferred_language" : "eng",
            "address_1" : "9482 Hailee Throughway, Port Sharonton, ND 91137-9004",
            "address_2" : "43186 Nienow Summit, New Stewart, KS 73101",
            "address_city" : "Lake Hester",
            "address_county" : "Jefferson",
            "address_post_code" : "28312-2426",
            "address_country" : "GBR",
            "customer_organization_name" : "Alvena Block",
            "customer_organization_number" : "ilyVMxhtu6bSbzQ4R1pyi4wu8VDzBkTK",
            "customer_organization_tax_id" : "waFPOttNWC873ZVkYRnehj7l52oq88WH",
            "additional" : {
              "custom_id" : "xxx6w37651dg2",
              "special_rate" : 30,
              "vip" : true,
              "etc" : "Etc, etc, etc."
            }
          },
          "seller" : {
            "name" : "Acme llc",
            "email" : "customerservice@acme.co.uk",
            "website" : "www.acme.com",
            "phone" : "0800 090 090",
            "additional" : {
              "special_id" : "y78gh7hg738gheuih437",
              "limited_edition" : true,
              "etc" : "Etc, etc, etc."
            }
          },
          "payment_methods" : [ {
            "id" : "32432-2fvsdq34-23grh34y-32f2h554h7h",
            "name" : "Credit Card",
            "live" : true,
            "show" : false,
            "reduction" : 100,
            "operator" : "percentage",
            "gateway" : "stripe",
            "method_type" : "card",
            "description" : "Payment by card",
            "order" : 1,
            "details" : {
              "public_key\"" : "pk_test_4jmhvCsJvYrCDZUljspbKpYs"
            }
          }, {
            "name\"" : "Bank Account",
            "live" : true,
            "show" : false,
            "reduction" : 500,
            "operator" : "percentage",
            "gateway" : "cash",
            "method_type" : "bank_account",
            "description" : "Payment through Bank Account",
            "order" : 2,
            "details" : {
              "account_number" : 938423423,
              "sort_code" : "30-30-30",
              "account_holder" : "bizpay ltd",
              "bank_name\"" : "Barclays",
              "bank_location" : "London",
              "bic" : "GB21321321321",
              "IBAN" : "GB21312321312",
              "SWIFT" : 2314235436
            }
          } ],
          "agreement" : {
            "plan_id" : "11f7629b-a4ff-4bb6-a8e1-07ad275b11a1",
            "terms_file" : "http://app.bizpay.co.uk/seller/terms.pdf",
            "currency" : "USD",
            "start_date" : "2018-05-31T14:43:59+00:00",
            "max_payment_date" : "2018-09-30T14:43:59+00:00",
            "period" : "weekly",
            "customer_id" : "99997a3a-5f36-4baf-964e-d78e2bcc122f",
            "cancelable" : false,
            "cancel_type" : "nonrefundable",
            "cancel_time" : 0,
            "refundable" : false,
            "refund_type" : "nonrefundable",
            "refund_time" : 0,
            "link" : "https://links.bizpay.co.uk/suy78yhfer78f73",
            "recalculate_due_dates" : false,
            "pricing_id" : 4234,
            "charge_automatically" : true,
            "require_method" : false,
            "first_payment" : false,
            "logo" : "http://company.com/logo.png",
            "quote_id" : "11f7629b-a4ff-4bb6-a8e1-07ad275b11a1",
            "total_value" : 10000,
            "total_tax" : 400,
            "short_id" : "R4E7X6ATG",
            "additional" : {
              "special_id" : "y78gh7hg738gheuih437",
              "anything" : "Some values",
              "limited_edition" : true,
              "etc" : "Etc, etc, etc."
            },
            "products" : [ {
              "id" : "11f7629b-a4ff-4bb6-a8e1-07ad275b11a5",
              "quantity" : 1,
              "description" : "Some Amazing Product",
              "pre_tax_price" : "100000",
              "tax_price" : "0",
              "total_price" : "100000",
              "first_payment" : "0",
              "pre_tax_refund" : "0",
              "tax_refund" : "0",
              "refund_total" : "0",
              "additional" : {
                "special_id" : "y78gh7hg738gheuih437",
                "remaining_inventory" : 3,
                "limited_edition" : true,
                "etc" : "Etc, etc, etc."
              }
            }, {
              "id" : "11f7629b-a4ff-4bb6-a8e1-07ad275b11a2",
              "quantity" : 1,
              "description" : "Some Amazing Product",
              "pre_tax_price" : "100000",
              "tax_price" : "0",
              "total_price" : "100000",
              "first_payment" : "0",
              "pre_tax_refund" : "0",
              "tax_refund" : "0",
              "refund_total" : "0",
              "additional" : {
                "special_id" : "y78gh7hg738gheuih437",
                "remaining_inventory" : 3,
                "limited_edition" : true,
                "etc" : "Etc, etc, etc."
              }
            } ]
          },
          "charges" : [ {
            "id" : "7c190ec9-567a-4d90-823e-67150c35132d",
            "customer_id" : "7c190ec5-567a-4d90-823e-67150c35132d",
            "currency" : "USD",
            "amount" : 9100,
            "name" : "Service fee charge - instalment 1",
            "transaction_date" : "2020-05-20T10:40:20+00:00",
            "method_id" : "1c190ec6-567a-4d90-823e-67150c35132d",
            "status" : "paid",
            "refund" : [ {
              "amount" : 50,
              "status" : "paid",
              "transaction_date" : "2020-05-20T10:50:20+00:00"
            }, {
              "amount" : 500,
              "status" : "paid",
              "transaction_date" : "2020-06-20T10:40:20+00:00"
            } ]
          }, {
            "id" : "8c190ec9-567a-4d90-823e-67150c35132d",
            "customer_id" : "7c190ec5-567a-4d90-823e-67150c35132d",
            "currency" : "USD",
            "amount" : 9100,
            "name" : "Service fee charge - instalment 1",
            "transaction_date" : "2020-05-20T10:40:20+00:00",
            "method_id" : "1c190ec6-567a-4d90-823e-67150c35132d",
            "status" : "paid"
          }, {
            "id" : "6c190ec9-567a-4d90-823e-67150c35132d",
            "customer_id" : "7c190ec5-567a-4d90-823e-67150c35132d",
            "currency" : "USD",
            "amount" : 9100,
            "name" : "Service fee charge - instalment 1",
            "transaction_date" : "2020-05-20T10:40:20+00:00",
            "method_id" : "1c190ec6-567a-4d90-823e-67150c35132d",
            "status" : "paid"
          } ],
          "notifications" : {
            "created" : "anemail@company.com|234324234-23423423-234324144-13423423|anotheremail@company.com",
            "no_method" : "anemail@company.com|234324234-23423423-234324144-13423423|anotheremail@company.com",
            "payment_failed" : "anemail@company.com|234324234-23423423-234324144-13423423|anotheremail@company.com",
            "payment_due" : "anemail@company.com|234324234-23423423-234324144-13423423|anotheremail@company.com",
            "payment_recieved" : "anemail@company.com|234324234-23423423-234324144-13423423|anotheremail@company.com",
            "paid" : "anemail@company.com|234324234-23423423-234324144-13423423|anotheremail@company.com",
            "cancelled" : "anemail@company.com|234324234-23423423-234324144-13423423|anotheremail@company.com",
            "refunded" : "anemail@company.com|234324234-23423423-234324144-13423423|anotheremail@company.com",
            "changed" : "anemail@company.com|234324234-23423423-234324144-13423423|anotheremail@company.com"
          }
        }
      }
    },
    "PostAgreement" : {
      "properties" : {
        "customer" : {
          "type" : "array",
          "description" : "Information relating to the agreement customer.",
          "items" : {
            "$ref" : "#/definitions/AgreementCustomer"
          }
        },
        "seller" : {
          "type" : "array",
          "description" : "Information relating to the agreement seller.",
          "items" : {
            "$ref" : "#/definitions/Seller"
          }
        },
        "agreement" : {
          "type" : "array",
          "description" : "Information relating to the agreement itself and products within the agreement.",
          "items" : {
            "$ref" : "#/definitions/Agreement"
          }
        },
        "notifications" : {
          "type" : "array",
          "description" : "Defines whether the bizpay system should send email notifications in the event of actions happening to agreements. Providing nothing for this array will result in no notifications being sent. All possible actions are specified. To request an email be sent, either a `customer_id` or email address is required. If multiple contacts need to be notified, specify multiple values delininated with the | character. The templates sent will be the bizpay defaults and will show the logo you have uploaded to our admin console - contact us to discuss personalising these.",
          "items" : {
            "$ref" : "#/definitions/Notifications"
          }
        }
      },
      "example" : {
        "customer" : {
          "first_name" : "Adam",
          "last_name" : "Hunt",
          "address_city" : "Weybridge",
          "address_county" : "Surrey",
          "address_post_code" : "111111",
          "email_address" : "email@domain.com",
          "telephone_number" : "(904) 444 44 44"
        },
        "seller" : {
          "name" : "Bret Mayer",
          "address_1" : "8016 Patricia Path",
          "address_2" : "82862 Bahringer Pike Suite 8711",
          "city" : "Egham",
          "county" : "Surrey",
          "post_code" : "52320",
          "country_id" : 20,
          "email" : "seller@email.com",
          "website" : "http://example.com",
          "phone" : "601.809.9493 x9221",
          "country_code" : "AND"
        },
        "agreement" : {
          "plan_id" : "ab56040c-8247-4179-a1e1-912ec7895e7f",
          "pricing_id" : "0cc108f9-8a9f-4e3d-a279-8d625a4d57c4",
          "recalculate_due_dates" : false,
          "charge_automatically" : true,
          "require_method" : false,
          "currency" : "USD",
          "start_date" : "2018-07-25T15:27:27+00:00",
          "max_payment_date" : "2019-07-25T15:27:27+00:00",
          "cancelable" : true,
          "cancel_type" : "refund_all",
          "cancel_time" : 7200,
          "refundable" : true,
          "refund_type" : "refund_products",
          "refund_time" : 14400,
          "link" : true,
          "additional" : {
            "first_parameter" : "first value",
            "second_parameter" : "second value"
          },
          "products" : [ {
            "quantity" : 3,
            "desc" : "Some Amazing Product",
            "pre_tax_price" : "100000",
            "tax_price" : "0",
            "total_price" : "100000",
            "first_payment" : "0",
            "pre_tax_refund" : "0",
            "tax_refund" : "0",
            "refund_total" : "0",
            "additional" : {
              "key1" : "value1",
              "key2" : "value2"
            }
          }, {
            "quantity" : 5,
            "desc" : "Another Amazing Product",
            "pre_tax_price" : "100000",
            "tax_price" : "0",
            "total_price" : "100000",
            "first_payment" : "0",
            "pre_tax_refund" : "0",
            "tax_refund" : "0",
            "refund_total" : "0",
            "additional" : {
              "key1" : "value1",
              "key2" : "value2"
            }
          }, {
            "quantity" : 3,
            "desc" : "Third Amazing Product",
            "pre_tax_price" : "100000",
            "tax_price" : "0",
            "total_price" : "100000",
            "first_payment" : "0",
            "pre_tax_refund" : "0",
            "tax_refund" : "0",
            "refund_total" : "0",
            "additional" : {
              "key1" : "value1",
              "key2" : "value2"
            }
          }, {
            "quantity" : 6,
            "desc" : "Fourth Amazing Product",
            "pre_tax_price" : "100000",
            "tax_price" : "0",
            "total_price" : "100000",
            "first_payment" : "0",
            "pre_tax_refund" : "0",
            "tax_refund" : "0",
            "refund_total" : "0",
            "additional" : {
              "key1" : "value1",
              "key2" : "value2"
            }
          }, {
            "quantity" : 1,
            "desc" : "Fourth Amazing Product",
            "pre_tax_price" : "100000",
            "tax_price" : "0",
            "total_price" : "100000",
            "first_payment" : "0",
            "pre_tax_refund" : "0",
            "tax_refund" : "0",
            "refund_total" : "0",
            "additional" : {
              "key1" : "value1",
              "key2" : "value2"
            }
          }, {
            "quantity" : 1,
            "desc" : "Agreement Fee",
            "pre_tax_price" : "100000",
            "tax_price" : "0",
            "total_price" : "100000",
            "first_payment" : "0",
            "pre_tax_refund" : "0",
            "tax_refund" : "0",
            "refund_total" : "0",
            "type" : "fee",
            "created_automatically" : true
          }, {
            "quantity" : 1,
            "desc" : "Agreement Fee",
            "pre_tax_price" : "100000",
            "tax_price" : "0",
            "total_price" : "100000",
            "first_payment" : "0",
            "pre_tax_refund" : "0",
            "tax_refund" : "0",
            "refund_total" : "0",
            "type" : "fee",
            "created_automatically" : true
          } ]
        },
        "notifications" : {
          "changed" : "email@domain.com",
          "cancelled" : "email@domain.com"
        }
      }
    },
    "AgreementFromQuote" : {
      "required" : [ "customer_id", "pricing_id", "seller" ],
      "properties" : {
        "pricing_id" : {
          "type" : "string",
          "example" : "5bad6aef-77bc-4a88-80c8-a23bb2005dbc",
          "description" : "The auto generated ID for the group which represents a specific pricing option you would like to use for the agreement."
        },
        "customer_id" : {
          "type" : "string",
          "example" : "3329861723HAoq0qV",
          "description" : "The automatically assigned `ID` representing a customer which is linked to the agreement.",
          "minLength" : 32,
          "maxLength" : 64
        },
        "charge_method_id" : {
          "type" : "string",
          "example" : "f4ac19af-1e11-43fa-bef2-67bf67b8605d",
          "description" : "An optional field which allows a specific charge method to be selected when an agreement is created."
        },
        "seller" : {
          "$ref" : "#/definitions/Seller"
        },
        "notifications" : {
          "type" : "array",
          "description" : "Defines whether the bizpay system should send email notifications in the event of actions happening to agreements. Providing nothing for this array will result in no notifications being sent. All possible actions are specified. To request an email be sent, either a `customer_id` or email address is required. If multiple contacts need to be notified, specify multiple values delininated with the | character. The templates sent will be the bizpay defaults and will show the logo you have uploaded to our admin console - contact us to discuss personalising these.",
          "items" : {
            "$ref" : "#/definitions/Notifications"
          }
        },
        "additional" : {
          "$ref" : "#/definitions/Additional"
        }
      },
      "example" : {
        "pricing_id" : "5bad6aef-77bc-4a88-80c8-a23bb2005dbc",
        "customer_id" : "3329861723HAoq0qV",
        "charge_method_id" : "123fdsf-77bc-4a88-80c8-sdf32csd",
        "seller" : {
          "name" : "Acme llc",
          "email" : "customerservice@acme.co.uk",
          "website" : "www.acme.com",
          "phone" : "0800 090 090",
          "additional" : {
            "special_id" : "y78gh7hg738gheuih437",
            "something" : 3,
            "another" : true,
            "etc" : "Etc, etc, etc."
          }
        },
        "notifications" : {
          "created" : "anemail@company.com",
          "no_method" : "anemail@company.com",
          "payment_failed" : "anemail@company.com",
          "payment_due" : "anemail@company.com",
          "payment_recieved" : "anemail@company.com",
          "paid" : "anemail@company.com",
          "cancelled" : "anemail@company.com",
          "refunded" : "anemail@company.com",
          "changed" : "anotheremail@company.com"
        },
        "additional" : {
          "special_id" : "y78gh7hg738gheuih437",
          "anything" : 3,
          "something" : true,
          "etc" : "Etc, etc, etc."
        }
      }
    },
    "ChangeMethod" : {
      "properties" : {
        "charges" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ChangeMethod_charges"
          }
        }
      },
      "example" : [ {
        "charge_id" : "2123332-b3da-360f-9353-a5a725514269",
        "method_id" : "dfe3w3-b3da-360f-9353-a5a725514269"
      }, {
        "charge_id" : "3123333-b3da-360f-9353-a5a725514269",
        "method_id" : "dfe3w3-b3da-360f-9353-a5a725514269"
      }, {
        "charge_id" : "4123334-b3da-360f-9353-a5a725514269",
        "method_id" : "dfe3w3-b3da-360f-9353-a5a725514269"
      } ]
    },
    "ChargeNow" : {
      "properties" : {
        "charges" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ChargeNow_charges"
          }
        }
      },
      "example" : [ {
        "charge_id" : "2123332-b3da-360f-9353-a5a725514269",
        "method_id" : "dfe3w3-b3da-360f-9353-a5a725514269"
      }, {
        "charge_id" : "3123333-b3da-360f-9353-a5a725514269"
      }, {
        "charge_id" : "4123334-b3da-360f-9353-a5a725514269"
      } ]
    },
    "AgreementCharges" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "2123332-b3da-360f-9353-a5a725514269",
          "description" : "The automatically generated id for a specific charge.",
          "readOnly" : true,
          "maxLength" : 64
        },
        "customer_id" : {
          "type" : "string",
          "example" : "3329861723HAoq0qV",
          "description" : "The automatically assigned `ID` representing a customer which is linked to the quote.",
          "minLength" : 32,
          "maxLength" : 64
        },
        "currency" : {
          "type" : "string",
          "example" : "USD",
          "description" : "'This is where you can specify the currency which the quote is in. Currencies can not be mixed together so all the products entered within the quote products_array must be priced in the same currency. <a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"blank\">See a full list of currencies here.</a>'",
          "minLength" : 3,
          "maxLength" : 3
        },
        "amount" : {
          "type" : "integer",
          "example" : 90,
          "description" : "The amount in currency of the charge. Note there is no decimalisation here. For example, USD 116 would represent $1.16."
        },
        "name" : {
          "type" : "string",
          "description" : "This is a name which describes what the charge relates to and helps identify it.",
          "maxLength" : 128
        },
        "transaction_date" : {
          "type" : "string",
          "example" : "2018-05-31T08:26:31+00:00",
          "description" : "This field specifies when the specific transaction occurred. All API dates need to be specified in the ISO 8601 format, `yyyy-MM-ddTHH:mm:ss�hh:mm` the T is required between the date and time and the latter � xx:xx allows for timezone changes. <a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"blank\">Full explanation here.</a>",
          "readOnly" : true
        },
        "method_id" : {
          "type" : "string",
          "example" : "2123332-b3da-360f-9353-a5a725514269",
          "description" : "The id of the payment method which either has or should be used for the charge."
        },
        "status" : {
          "type" : "string",
          "description" : "The status of the charge. Can be `pending`, `paid`, `failed` or `void`. `pending` means the payment has not yet been processed, `paid` means the amount was taken successfully, `failed` means payment was attempted but failed to be taken and `void` means the charge was voided.",
          "readOnly" : true,
          "enum" : [ "pending", "paid", "failed", "void" ]
        },
        "overdue" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies if payment for this charge is overdue. If `true` the payment is overdue. If `false` the payment is due in the future."
        },
        "refund" : {
          "$ref" : "#/definitions/RefundCharges"
        }
      },
      "example" : [ {
        "id" : "7c190ec9-567a-4d90-823e-67150c35132d",
        "customer_id" : "7c190ec5-567a-4d90-823e-67150c35132d",
        "currency" : "USD",
        "amount" : 9100,
        "name" : "Service fee charge - instalment 1",
        "transaction_date" : "2020-05-20T10:40:20+00:00",
        "method_id" : "1c190ec6-567a-4d90-823e-67150c35132d",
        "status" : "paid",
        "refund" : [ {
          "amount" : 50,
          "status" : "paid",
          "transaction_date" : "2020-05-20T10:50:20+00:00"
        }, {
          "amount" : 500,
          "status" : "paid",
          "transaction_date" : "2020-06-20T10:40:20+00:00"
        } ]
      }, {
        "id" : "8c190ec9-567a-4d90-823e-67150c35132d",
        "customer_id" : "7c190ec5-567a-4d90-823e-67150c35132d",
        "currency" : "USD",
        "amount" : 9100,
        "name" : "Service fee charge - instalment 1",
        "transaction_date" : "2020-05-20T10:40:20+00:00",
        "method_id" : "1c190ec6-567a-4d90-823e-67150c35132d",
        "status" : "paid"
      }, {
        "id" : "6c190ec9-567a-4d90-823e-67150c35132d",
        "customer_id" : "7c190ec5-567a-4d90-823e-67150c35132d",
        "currency" : "USD",
        "amount" : 9100,
        "name" : "Service fee charge - instalment 1",
        "transaction_date" : "2020-05-20T10:40:20+00:00",
        "method_id" : "1c190ec6-567a-4d90-823e-67150c35132d",
        "status" : "paid"
      } ]
    },
    "RefundCharges" : {
      "properties" : {
        "amount" : {
          "type" : "integer",
          "description" : "The amount which has been refunded against the charge. Note this has no decimalisation. For example, USD 116 would represent $1.16."
        },
        "transaction_date" : {
          "type" : "string",
          "example" : "2020-05-20T10:40:20+00:00",
          "description" : "The date the refund took place."
        }
      },
      "description" : "An array which if present shows the refunds which have occurred against the charge."
    },
    "GetCharges" : {
      "properties" : {
        "charges" : {
          "type" : "array",
          "description" : "A list of charges within your bizpay account.",
          "items" : {
            "$ref" : "#/definitions/GetCharge"
          }
        },
        "links" : {
          "type" : "array",
          "description" : "A list of all the navigation links for the response.",
          "items" : {
            "$ref" : "#/definitions/pageLinks"
          }
        },
        "meta" : {
          "type" : "array",
          "description" : "A list of the response meta data.",
          "items" : {
            "$ref" : "#/definitions/pageMeta"
          }
        }
      },
      "example" : {
        "data" : [ {
          "id" : "7c190ec9-567a-4d90-823e-67150c35132d",
          "customer_id" : "7c190ec5-567a-4d90-823e-67150c35132d",
          "currency" : "USD",
          "amount" : 9100,
          "name" : "Service fee charge - instalment 1",
          "transaction_date" : "2020-05-20T10:40:20+00:00",
          "method_id" : "1c190ec6-567a-4d90-823e-67150c35132d",
          "status" : "paid",
          "overdue" : false,
          "refund" : [ {
            "amount" : 9100,
            "status" : "paid",
            "transaction_date" : "2020-05-20T10:40:20+00:00"
          } ]
        }, {
          "id" : "8c190ec9-567a-4d90-823e-67150c35132d",
          "customer_id" : "7c190ec5-567a-4d90-823e-67150c35132d",
          "currency" : "USD",
          "amount" : 9100,
          "name" : "Service fee charge - instalment 2",
          "transaction_date" : "2020-05-20T10:40:20+00:00",
          "method_id" : "1c190ec6-567a-4d90-823e-67150c35132d",
          "status" : "paid",
          "overdue" : false,
          "refund" : [ {
            "amount" : 9100,
            "status" : "paid",
            "transaction_date" : "2020-05-20T10:40:20+00:00"
          } ]
        }, {
          "id" : "9c190ec9-567a-4d90-823e-67150c35132d",
          "customer_id" : "7c190ec5-567a-4d90-823e-67150c35132d",
          "currency" : "USD",
          "amount" : 9100,
          "name" : "Service fee charge - instalment 3",
          "transaction_date" : "2020-05-20T10:40:20+00:00",
          "method_id" : "1c190ec6-567a-4d90-823e-67150c35132d",
          "status" : "paid",
          "overdue" : false,
          "refund" : [ {
            "amount" : 9100,
            "status" : "paid",
            "transaction_date" : "2020-05-20T10:40:20+00:00"
          } ]
        } ],
        "links" : {
          "first" : "https://api.bizpay.co.uk/api/v1.25/charges?page=1",
          "last" : "https://api.bizpay.co.uk/api/v1.25/charges?page=50",
          "next" : "https://api.bizpay.co.uk/api/v1.25/charges?page=2"
        },
        "meta" : {
          "current_page" : 1,
          "from" : 1,
          "to" : 50,
          "last_page" : 50,
          "path" : "https://api.bizpay.co.uk/api/v1.25/charges",
          "per_page" : 50,
          "total" : 500
        }
      }
    },
    "GetCharge" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "2123332-b3da-360f-9353-a5a725514269",
          "description" : "The automatically generated id for a specific charge.",
          "readOnly" : true,
          "maxLength" : 64
        },
        "customer_id" : {
          "type" : "string",
          "example" : "3329861723HAoq0qV",
          "description" : "The automatically assigned `ID` representing a customer which is linked to the quote.",
          "minLength" : 32,
          "maxLength" : 64
        },
        "currency" : {
          "type" : "string",
          "example" : "USD",
          "description" : "'This is where you can specify the currency which the quote is in. Currencies can not be mixed together so all the products entered within the quote products_array must be priced in the same currency. <a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"blank\">Full list of currencies here.</a>.'",
          "minLength" : 3,
          "maxLength" : 3
        },
        "amount" : {
          "type" : "integer",
          "example" : 90,
          "description" : "The amount in currency of the charge. Note there is no decimalisation here. For example, USD 116 would represent $1.16."
        },
        "name" : {
          "type" : "string",
          "description" : "This is a name which describes what the charge relates to and helps identify it.",
          "maxLength" : 128
        },
        "transaction_date" : {
          "type" : "string",
          "example" : "2018-05-31T08:26:31+00:00",
          "description" : "This field specifies when the specific transaction occurred. The required format is `yyyy-MM-ddTHH:mm:ss�hh:mm` the T is required between the date and time and the latter � xx:xx allows for timezone changes. <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"blank\">Full explanation here</a>.",
          "readOnly" : true
        },
        "method_id" : {
          "type" : "string",
          "example" : "2123332-b3da-360f-9353-a5a725514269",
          "description" : "The id of the payment method which either has or should be used for the charge."
        },
        "status" : {
          "type" : "string",
          "description" : "The status of the charge. Can be `pending`, `paid`, `failed` or `void`. `pending` means the payment has not yet been processed, `paid` means the amount was taken successfully, `failed` means it attempted but failed to be taken and `void` means the charge was manually voided.",
          "readOnly" : true,
          "enum" : [ "pending", "paid", "failed", "void" ]
        },
        "overdue" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Specifies if payment for the charge is overdue. If `true` the payment is overdue. If `false` the payment is due in the future."
        },
        "refund" : {
          "type" : "array",
          "description" : "Array with details of any refunds which relate to the charge.",
          "items" : {
            "$ref" : "#/definitions/RefundCharges"
          }
        }
      },
      "example" : {
        "data" : [ {
          "id" : "7c190ec9-567a-4d90-823e-67150c35132d",
          "customer_id" : "7c190ec5-567a-4d90-823e-67150c35132d",
          "currency" : "USD",
          "amount" : 9100,
          "name" : "Service fee charge - instalment 1",
          "transaction_date" : "2020-05-20T10:40:20+00:00",
          "method_id" : "1c190ec6-567a-4d90-823e-67150c35132d",
          "status" : "paid",
          "overdue" : false,
          "refund" : [ {
            "amount" : 9100,
            "status" : "paid",
            "transaction_date" : "2020-05-20T10:40:20+00:00"
          } ]
        }, {
          "id" : "8c190ec9-567a-4d90-823e-67150c35132d",
          "customer_id" : "7c190ec5-567a-4d90-823e-67150c35132d",
          "currency" : "USD",
          "amount" : 9100,
          "name" : "Service fee charge - instalment 1",
          "transaction_date" : "2020-05-20T10:40:20+00:00",
          "method_id" : "1c190ec6-567a-4d90-823e-67150c35132d",
          "status" : "paid",
          "overdue" : false,
          "refund" : [ {
            "amount" : 9100,
            "status" : "paid",
            "transaction_date" : "2020-05-20T10:40:20+00:00"
          } ]
        }, {
          "id" : "6c190ec9-567a-4d90-823e-67150c35132d",
          "customer_id" : "7c190ec5-567a-4d90-823e-67150c35132d",
          "currency" : "USD",
          "amount" : 9100,
          "name" : "Service fee charge - instalment 1",
          "transaction_date" : "2020-05-20T10:40:20+00:00",
          "method_id" : "1c190ec6-567a-4d90-823e-67150c35132d",
          "status" : "paid",
          "overdue" : false,
          "refund" : [ {
            "amount" : 9100,
            "status" : "paid",
            "transaction_date" : "2020-05-20T10:40:20+00:00"
          } ]
        } ],
        "links" : {
          "first" : "https://api.bizpay.co.uk/api/v1.25/charges?page=1",
          "last" : "https://api.bizpay.co.uk/api/v1.25/charges?page=2",
          "next" : "https://api.bizpay.co.uk/api/v1.25/charges?page=2"
        },
        "meta" : {
          "current_page" : 1,
          "from" : 1,
          "last_page" : 2,
          "path" : "https://api.bizpay.co.uk/api/v1.25/charges",
          "per_page" : 50,
          "to" : 3,
          "total" : 5
        }
      }
    },
    "PostCharges" : {
      "required" : [ "amount", "currency", "when" ],
      "properties" : {
        "currency" : {
          "type" : "string",
          "example" : "USD",
          "description" : "'This is where you can specify the currency which the quote is in. Currencies can not be mixed together so all the products entered within the quote products_array must be priced in the same currency. <a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"blank\">Full list of currencies here.</a>.'",
          "minLength" : 3,
          "maxLength" : 3
        },
        "amount" : {
          "type" : "integer",
          "example" : 90,
          "description" : "The amount in currency of the charge. Note there is no decimalisation here. For example, USD 116 would represent $1.16."
        },
        "name" : {
          "type" : "string",
          "example" : "Late payment fee",
          "description" : "This is a name which describes what the charge relates to and helps identify it.",
          "maxLength" : 128
        },
        "when" : {
          "type" : "string",
          "example" : "2018-05-31T08:26:31+00:00",
          "description" : "This field specifies when the charge should occur. The required format is `yyyy-MM-ddTHH:mm:ss�hh:mm` the T is required between the date and time and the latter � xx:xx allows for timezone changes. <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"blank\">Full explanation here</a>."
        },
        "method_id" : {
          "type" : "string",
          "example" : "2123332-b3da-360f-9353-a5a725514269",
          "description" : "The id of the payment method which either has or should be used for the charge. If nothing is specified for this, the default method stored for the customer will be used."
        }
      },
      "example" : {
        "currency" : "USD",
        "amount" : 9100,
        "name" : "Service fee charge - instalment 1",
        "when" : "2020-05-20T10:40:20+00:00",
        "method_id" : "1c190ec6-567a-4d90-823e-67150c35132d"
      }
    },
    "PutChargeMethod" : {
      "properties" : {
        "label" : {
          "type" : "string",
          "description" : "This specifies the label which can be used by the customer to identify a payment method."
        },
        "default" : {
          "type" : "boolean",
          "description" : "This specifies whether this payment method is the default for this customer. Setting this to yes will set all other tokens and payment methods to No as there can only be one default payment method per customer. If there is only one payment method, this option will be Yes, even if No is specified. Seting a new payment method to default will replace the current default method."
        },
        "show" : {
          "type" : "boolean",
          "example" : false,
          "description" : "This specifies whether the charge method should show in a list of saved payment methods."
        }
      },
      "example" : {
        "label" : "Mastercard ending 3443",
        "default" : true,
        "show" : false,
        "method_type" : "card"
      }
    },
    "PostChargeMethod" : {
      "required" : [ "default", "gateway", "id", "label" ],
      "discriminator" : "gateway",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "The unique identifier of the gateway which will be used with the charge method."
        },
        "gateway" : {
          "type" : "string",
          "description" : "Gateway allows you to specify the gateway you wish to use to store the payment method. Changing the gateway type, changes the fields required in the details array.",
          "enum" : [ "stripe", "adyen", "worldpay", "cash" ]
        },
        "label" : {
          "type" : "string",
          "description" : "This specifies the label which can be used by the customer to identify a payment method."
        },
        "default" : {
          "type" : "boolean",
          "description" : "This specifies whether this payment method is the default for this customer. Setting this to yes will set all other tokens and payment methods to No as there can only be one default payment method per customer. If there is only one payment method, this option will be Yes, even if No is specified. Seting a new payment method to default will replace the current default method."
        },
        "show" : {
          "type" : "boolean",
          "example" : false,
          "description" : "This specifies whether the charge method should show in a list of saved payment methods.",
          "default" : true
        }
      },
      "example" : {
        "gateway" : "stripe",
        "label" : "Mastercard ending 3443",
        "default" : true,
        "show" : false,
        "method_type" : "card",
        "details" : {
          "token" : "2374hfuy732-23f23uhsd-kjdfh327-jf372y",
          "email" : "example@email.com",
          "gateway_customer_id" : "234234-23423432-23432432-23434"
        }
      }
    },
    "stripe" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PostChargeMethod"
      }, {
        "type" : "object",
        "required" : [ "details", "method_type" ],
        "properties" : {
          "method_type" : {
            "type" : "string",
            "description" : "Payment via card is currently the only supported payment type via the stripe gateway. Contact us via enquiries @ bizpay.co.uk if you would like to discuss enabling other stripe methods.",
            "enum" : [ "card" ]
          },
          "details" : {
            "type" : "array",
            "description" : "This specifies the details which need to be provided to save a payment method using the `stripe payment gateway`. Content for this array varies by payment gateway and payment method.",
            "items" : {
              "$ref" : "#/definitions/stripe_details"
            }
          }
        }
      } ]
    },
    "stripe_publickey_200" : {
      "properties" : {
        "publishable_key" : {
          "type" : "string",
          "example" : "3329861723HAoq0qV",
          "description" : "The automatically assigned `publishable ID` for the stipe payment gateway.",
          "minLength" : 32,
          "maxLength" : 64
        }
      },
      "example" : {
        "stripe_publishable_key" : "3329861723HAoq0qV"
      }
    },
    "worldpay" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PostChargeMethod"
      }, {
        "type" : "object",
        "required" : [ "details" ],
        "properties" : {
          "method_type" : {
            "type" : "string",
            "description" : "Payment via card is the only supported option via worldpay. Please contact us via enquiries @ bizpay.co.uk to enable other methods.",
            "enum" : [ "card" ]
          },
          "details" : {
            "type" : "array",
            "description" : "This specifies the details which need to be provided to save a payment method using the `worldpay payment gateway`. Content for this array varies by payment gateway and payment method.",
            "items" : {
              "$ref" : "#/definitions/worldpay_details"
            }
          }
        }
      } ]
    },
    "adyen" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PostChargeMethod"
      }, {
        "type" : "object",
        "required" : [ "details" ],
        "properties" : {
          "method_type" : {
            "type" : "string",
            "description" : "Payment via card is the only supported type via the adyen gateway. Please contact us via enquiries @ bizpay.co.uk to enable other methods.",
            "enum" : [ "card" ]
          },
          "details" : {
            "type" : "array",
            "description" : "This specifies the details which need to be provided to save a charging method via the `adyen payment gateway`. Content for this array varies by payment gateway and payment method.",
            "items" : {
              "$ref" : "#/definitions/adyen_details"
            }
          }
        }
      } ]
    },
    "cash" : {
      "allOf" : [ {
        "$ref" : "#/definitions/PostChargeMethod"
      }, {
        "type" : "object",
        "required" : [ "details" ],
        "properties" : {
          "details" : {
            "type" : "array",
            "description" : "This specifies the details which need to be provided to use the `cash payment gateway`. Content for this array varies by payment gateway and payment method. <br><br>The cash payment gateway type allows for transactions which have been received via a manual or offline system to be recorded.",
            "items" : {
              "$ref" : "#/definitions/cash_details"
            }
          }
        }
      } ]
    },
    "getChargeMethods_response_200" : {
      "properties" : {
        "gateway" : {
          "type" : "string",
          "description" : "Gateway represents the gateway which stores the payment method.",
          "enum" : [ "stripe", "adyen", "worldpay", "cash" ]
        },
        "id" : {
          "type" : "string",
          "description" : "The id which represents this payment method in the bizpay system."
        },
        "gateway_customer_id" : {
          "type" : "string",
          "description" : "The `id` which the gateway uses to represent the customer."
        },
        "label" : {
          "type" : "string",
          "description" : "This specifies the label which can be used by the customer to identify which payment method relates to."
        },
        "default" : {
          "type" : "boolean",
          "description" : "This specifies whether this payment method is the default for this customer. Setting this to yes will set all other tokens and payment methods to No as there can only be one default payment method per customer. If there is only one payment method, this option will be Yes, even if No is specified. Seting a new payment method to default will replace the current default method."
        },
        "show" : {
          "type" : "boolean",
          "example" : false,
          "description" : "This specifies whether the charge method should show in a list of saved payment methods.",
          "default" : true
        },
        "method_type" : {
          "type" : "string",
          "description" : "The type of payment method which is being added. Available options are `card` which represents a credit card, and `cash` which represents cash.",
          "enum" : [ "cash", "card" ]
        }
      },
      "example" : {
        "data" : {
          "adyen" : [ {
            "id" : "sdfjf32-23423423-sdfsdf-324234",
            "gateway_customer_id" : "27364732-3432423-23432423-234234231f",
            "label" : "Visa card ending 0096",
            "default" : true,
            "show" : false,
            "method_type" : "card"
          }, {
            "id" : "sdfjf32-23423423-sdfsdf-324234",
            "gateway_customer_id" : "27364732-3432423-23432423-23423423ii",
            "label" : "Visa card ending 0097",
            "default" : false,
            "show" : true,
            "method_type" : "card"
          } ],
          "stripe" : [ {
            "id" : "sdfjf32-23423423-sdfsdf-324234",
            "gateway_customer_id" : "27364732-3432423-23432423-234234231g",
            "label" : "Visa card ending 0097",
            "default" : false,
            "show" : true,
            "method_type" : "card"
          }, {
            "id" : "sdfjf32-23423423-sdfsdf-324234",
            "gateway_customer_id" : "27364732-3432423-23432423-234234231h",
            "label" : "Visa card ending 0098",
            "default" : false,
            "show" : false,
            "method_type" : "card"
          }, {
            "id" : "sdfjf32-23423423-sdfsdf-324234",
            "gateway_customer_id" : "27364732-3432423-23432423-234234231i",
            "label" : "Visa card ending 0099",
            "default" : false,
            "show" : true,
            "method_type" : "card"
          } ]
        }
      }
    },
    "ErrorResponse" : {
      "type" : "object",
      "required" : [ "message" ],
      "properties" : {
        "message" : {
          "type" : "string",
          "description" : "The error message.",
          "x-nullable" : false
        }
      },
      "description" : "Represents an error.",
      "example" : {
        "message" : "Description of what went wrong."
      }
    },
    "CustomerErrors" : {
      "properties" : {
        "first_name" : {
          "type" : "string",
          "example" : "The first name field is required.",
          "description" : "The first name field is required."
        },
        "last_name" : {
          "type" : "string",
          "example" : "The last name field is required.",
          "description" : "The last name field is required."
        },
        "email" : {
          "type" : "string",
          "example" : "The email must be a valid email address.",
          "description" : "The email must be a valid email address."
        },
        "gender" : {
          "type" : "string",
          "example" : "The selected gender is invalid.",
          "description" : "The selected gender is invalid."
        },
        "preferred_language" : {
          "type" : "string",
          "example" : "The selected preferred language is invalid.",
          "description" : "The selected preferred language is invalid."
        },
        "address_country" : {
          "type" : "string",
          "example" : "The selected address country is invalid.",
          "description" : "The selected address country is invalid."
        },
        "customer_organization_name" : {
          "type" : "string",
          "example" : "The customer organization name may not be greater than 128 characters.",
          "description" : "The customer organization name may not be greater than 128 characters."
        },
        "customer_organization_number" : {
          "type" : "string",
          "example" : "The customer organization number may not be greater than 255 characters.",
          "description" : "The customer organization number may not be greater than 255 characters."
        },
        "customer_organization_tax_id" : {
          "type" : "string",
          "example" : "The customer organization tax id may not be greater than 128 characters.",
          "description" : "The customer organization tax id may not be greater than 128 characters."
        }
      },
      "description" : "Customer data processing potential errors"
    },
    "id_response_200" : {
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "3329861723HAoq0qV",
          "description" : "The automatically assigned `ID` representing the relevant object.",
          "minLength" : 32,
          "maxLength" : 64
        }
      },
      "example" : {
        "id" : "3329861723HAoq0qV"
      }
    },
    "ok_response_200" : {
      "properties" : {
        "status" : {
          "type" : "string",
          "example" : "ok",
          "description" : "Confirmation that the transaction was `ok`."
        }
      },
      "example" : {
        "status" : "ok"
      }
    },
    "pageLinks" : {
      "properties" : {
        "first" : {
          "type" : "string",
          "description" : "The url of the first page."
        },
        "last" : {
          "type" : "string",
          "description" : "The url of the last page."
        },
        "prev" : {
          "type" : "string",
          "description" : "The url of the previous page."
        },
        "next" : {
          "type" : "string",
          "description" : "The url of the next page."
        }
      },
      "example" : {
        "first" : "https://api.bizpay.co.uk/api/v1.25/{endpoint}?page=1",
        "last" : "https://api.bizpay.co.uk/api/v1.25/{endpoint}?page=50",
        "next" : "https://api.bizpay.co.uk/api/v1.25/{endpoint}?page=2"
      }
    },
    "pageMeta" : {
      "properties" : {
        "current_page" : {
          "type" : "integer",
          "example" : 50,
          "description" : "The current result page"
        },
        "from" : {
          "type" : "integer",
          "example" : 1,
          "description" : "The starting page of the response."
        },
        "to" : {
          "type" : "integer",
          "example" : 50,
          "description" : "The maximum number of pages to return with this request."
        },
        "last_page" : {
          "type" : "integer",
          "example" : 50,
          "description" : "The final page of the response."
        },
        "total" : {
          "type" : "integer",
          "example" : 500,
          "description" : "The total number of results in this request."
        },
        "path" : {
          "type" : "string",
          "example" : "https://api.bizpay.co.uk/api/v1.25/{endpoint}",
          "description" : "The base url of this response."
        },
        "per_page" : {
          "type" : "integer",
          "example" : 10,
          "description" : "The number of results per page."
        }
      },
      "example" : {
        "current_page" : 1,
        "from" : 1,
        "last_page" : 2,
        "path" : "https://api.bizpay.co.uk/api/v1.25/{endpoint}",
        "per_page" : 50,
        "to" : 3,
        "total" : 5
      }
    },
    "QuotePricing_plan" : {
      "properties" : {
        "label" : {
          "type" : "string",
          "example" : "1 month",
          "description" : "When our standard interfaces are used, this label will be shown to describe the term of this pricing option to buyers. This field is not required and if nothing is specified, our system will populate this for you automatically.",
          "maxLength" : 32,
          "x-nullable" : true
        },
        "short_label" : {
          "type" : "string",
          "example" : "1m",
          "description" : "When our interfaces are used, this field will be shown to buyers when they access the page using a small screen. This field is not required and if nothing is specified, our system will populate this for you automatically.",
          "maxLength" : 3,
          "x-nullable" : true
        },
        "name" : {
          "type" : "string",
          "example" : "Administration fee",
          "description" : "The name which was defined in plan for this pricing option. This name will be added as a product to any agreement which is created.",
          "readOnly" : true
        },
        "pre_tax_price" : {
          "type" : "integer",
          "example" : 1000,
          "description" : "This is the amount which will be be charged for this pricing option if it is selected. It does not inlcude any taxes (these are specified seperately in `tax_price`). There is no decimalisation, for example, USD 116 is $1.16.",
          "readOnly" : true
        },
        "tax_price" : {
          "type" : "integer",
          "example" : 100,
          "description" : "The amount of tax which will be charged for this pricing option, with no decimalisation. For example, USD 116 represents $1.16.",
          "readOnly" : true
        },
        "total_price" : {
          "type" : "integer",
          "example" : 1000,
          "description" : "This is calculated by adding the `pre_tax_price` and the `tax_price` together and contains no decimalisation. For example, USD 116 would represent $1.16.",
          "readOnly" : true
        },
        "default" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Specifies whether this option is the group default",
          "readOnly" : true
        }
      }
    },
    "QuotePricing_quote" : {
      "properties" : {
        "first_payment_amount" : {
          "type" : "integer",
          "example" : 180,
          "description" : "The amount due in the first payment of this quote with no decimalisation. For example, USD 116 would represent $1.16",
          "readOnly" : true
        },
        "pre_tax_price" : {
          "type" : "integer",
          "example" : 1000,
          "description" : "This is the price of the quote, not inlcuding any taxes (these are specified seperately in `tax_price`). There is no decimalisation, for example, USD 116 is $1.16.",
          "readOnly" : true
        },
        "tax_price" : {
          "type" : "integer",
          "example" : 100,
          "description" : "The amount of tax for the quote with no decimalisation. For example, USD 116 represents $1.16.",
          "readOnly" : true
        },
        "total_price" : {
          "type" : "integer",
          "example" : 1000,
          "description" : "This is the total price for this quote and is calculated by adding the `pre_tax_price` and the `tax_price` together. It has no decimalisation so for example, USD 116 represents $1.16.",
          "readOnly" : true
        }
      }
    },
    "card_details" : {
      "properties" : {
        "publishable_key" : {
          "type" : "string",
          "example" : "3329861723HAoq0qV",
          "description" : "The automatically assigned `publishable ID` for the stipe payment gateway.",
          "minLength" : 32,
          "maxLength" : 64
        }
      }
    },
    "bank_account_details" : {
      "properties" : {
        "account_number" : {
          "type" : "string",
          "example" : "938423423",
          "description" : "The account number which should be used by customers to pay into."
        },
        "sort_code" : {
          "type" : "string",
          "example" : "30-30-30",
          "description" : "The sort code of the account number customers will pay into."
        },
        "reference" : {
          "type" : "string",
          "example" : "R4ED2T52",
          "description" : "The reference number which customers should attach to their payment. This will be specific to the customer and is able to span multiple agreements."
        },
        "account_holder" : {
          "type" : "string",
          "example" : "Acme Ltd",
          "description" : "The name of the entity or individual who owns the account."
        },
        "bank_name" : {
          "type" : "string",
          "example" : "Barclays",
          "description" : "The name of the bank which provides the account."
        },
        "bank_location" : {
          "type" : "string",
          "example" : "London",
          "description" : "The Location of the branch which holds the account."
        },
        "bic" : {
          "type" : "string",
          "example" : "DABAIE2D",
          "description" : "The BIC (Bank Identifier Code) for the bank"
        },
        "IBAN" : {
          "type" : "string",
          "example" : "CY17002001280000001200527600",
          "description" : "The IBAN (Internatational Bank Account Number)"
        },
        "swift" : {
          "type" : "string",
          "example" : "CTBAAU2S",
          "description" : "The SWIFT code (Society for Worldwide Interbank Financial Telecommunication)"
        }
      }
    },
    "ChangeMethod_charges" : {
      "required" : [ "charge_id", "method_id" ],
      "properties" : {
        "charge_id" : {
          "type" : "string",
          "example" : "2123332-b3da-360f-9353-a5a725514269",
          "description" : "The automatically generated id for a specific charge.",
          "maxLength" : 64
        },
        "method_id" : {
          "type" : "string",
          "example" : "dfe3w3-b3da-360f-9353-a5a725514269",
          "description" : "The automatically generated id for a specific charge method."
        }
      }
    },
    "ChargeNow_charges" : {
      "required" : [ "charge_id" ],
      "properties" : {
        "charge_id" : {
          "type" : "string",
          "example" : "2123332-b3da-360f-9353-a5a725514269",
          "description" : "The automatically generated id for a specific charge.",
          "maxLength" : 64
        },
        "method_id" : {
          "type" : "string",
          "example" : "dfe3w3-b3da-360f-9353-a5a725514269",
          "description" : "The automatically generated id for a specific charge method.",
          "x-nullable" : true
        }
      }
    },
    "stripe_details" : {
      "required" : [ "email", "token" ],
      "properties" : {
        "token" : {
          "type" : "string",
          "description" : "The id of the stripe payment token which you would like to store."
        },
        "email" : {
          "type" : "string",
          "description" : "The email address the user entered during the checkout process."
        },
        "gateway_customer_id" : {
          "type" : "string",
          "description" : "An optional `id` which can be specified if the gateway already has an ID to represent this customer and you would like to add this method to that ID and link it to the customer in future."
        }
      }
    },
    "worldpay_details" : {
      "required" : [ "email", "token" ],
      "properties" : {
        "token" : {
          "type" : "string",
          "description" : "The id of the worldpay payment token which you would like to store."
        },
        "email" : {
          "type" : "string",
          "description" : "The email address the user entered during the checkout process."
        }
      }
    },
    "adyen_details" : {
      "required" : [ "email", "token" ],
      "properties" : {
        "token" : {
          "type" : "string",
          "description" : "The id of the adyen payment token which you would like to store."
        },
        "email" : {
          "type" : "string",
          "description" : "The email address the user entered during the checkout process."
        }
      }
    },
    "cash_details" : {
      "required" : [ "actor_id" ],
      "properties" : {
        "actor_id" : {
          "type" : "string",
          "description" : "The id of the actor who is requesting the addition of the cash charge method to the customer."
        }
      }
    }
  },
  "x-servers" : [ {
    "url" : "//api.bizpay.co.uk/api/v1.25",
    "description" : "API Server (Live)"
  }, {
    "url" : "//api-test.bizpay.co.uk/api/v1.25",
    "description" : "API Server (Test)"
  } ]
}